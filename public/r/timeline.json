{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "timeline",
  "type": "registry:ui",
  "files": [
    {
      "path": "src/registry/items/ui/timeline.tsx",
      "content": "import type {\r\n  Component,\r\n  ComponentProps,\r\n  JSXElement,\r\n  ParentComponent,\r\n} from \"solid-js\";\r\n\r\nimport { For, mergeProps, Show, splitProps } from \"solid-js\";\r\n\r\nimport { cn } from \"~/lib/utils\";\r\n\r\nexport type TimelinePropsItem = Omit<\r\n  TimelineItemProps,\r\n  \"isActive\" | \"isActiveBullet\" | \"bulletSize\" | \"lineSize\"\r\n> & {\r\n  bulletSize?: number;\r\n};\r\n\r\nexport type TimelineProps = {\r\n  items: TimelinePropsItem[];\r\n  activeItem: number;\r\n  bulletSize?: number;\r\n  lineSize?: number;\r\n};\r\n\r\n/*\r\n  No bullet or line is active when activeItem is -1\r\n  First bullet is active only if activeItem is 0 or more\r\n  First line is active only if activeItem is 1 or more\r\n*/\r\n\r\nconst Timeline: Component<TimelineProps> = (rawProps) => {\r\n  const props = mergeProps({ bulletSize: 16, lineSize: 2 }, rawProps);\r\n\r\n  return (\r\n    <ul\r\n      data-slot=\"timeline\"\r\n      style={{\r\n        \"padding-left\": `${props.bulletSize / 2}px`,\r\n      }}\r\n    >\r\n      <For each={props.items}>\r\n        {(item, index) => (\r\n          <TimelineItem\r\n            title={item.title}\r\n            description={item.description}\r\n            bullet={item.bullet}\r\n            isLast={index() === props.items.length - 1}\r\n            isActive={\r\n              props.activeItem === -1 ? false : props.activeItem >= index() + 1\r\n            }\r\n            isActiveBullet={\r\n              props.activeItem === -1 ? false : props.activeItem >= index()\r\n            }\r\n            bulletSize={props.bulletSize}\r\n            lineSize={props.lineSize}\r\n          />\r\n        )}\r\n      </For>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport type TimelineItemProps = {\r\n  title: JSXElement;\r\n  description?: JSXElement;\r\n  bullet?: JSXElement;\r\n  isLast?: boolean;\r\n  isActive: boolean;\r\n  isActiveBullet: boolean;\r\n  class?: string;\r\n  bulletSize: number;\r\n  lineSize: number;\r\n};\r\n\r\nconst TimelineItem: Component<TimelineItemProps> = (props) => {\r\n  const [local, others] = splitProps(props, [\r\n    \"class\",\r\n    \"bullet\",\r\n    \"description\",\r\n    \"title\",\r\n    \"isLast\",\r\n    \"isActive\",\r\n    \"isActiveBullet\",\r\n    \"bulletSize\",\r\n    \"lineSize\",\r\n  ]);\r\n  return (\r\n    <li\r\n      data-slot=\"timeline-item\"\r\n      class={cn(\r\n        \"relative border-l-primary/30 pb-8 pl-8\",\r\n        local.isLast && \"border-l-transparent pb-0\",\r\n        local.isActive && !local.isLast && \"border-l-primary\",\r\n        local.class,\r\n      )}\r\n      style={{\r\n        \"border-left-width\": `${local.lineSize}px`,\r\n      }}\r\n      {...others}\r\n    >\r\n      <TimelineItemBullet\r\n        lineSize={local.lineSize}\r\n        bulletSize={local.bulletSize}\r\n        isActive={local.isActiveBullet}\r\n      >\r\n        {local.bullet}\r\n      </TimelineItemBullet>\r\n      <TimelineItemTitle>{local.title}</TimelineItemTitle>\r\n      <Show when={local.description}>\r\n        <TimelineItemDescription>{local.description}</TimelineItemDescription>\r\n      </Show>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport type TimelineItemBulletProps = {\r\n  children?: JSXElement;\r\n  isActive?: boolean;\r\n  bulletSize: number;\r\n  lineSize: number;\r\n};\r\n\r\nconst TimelineItemBullet: Component<TimelineItemBulletProps> = (props) => {\r\n  return (\r\n    <div\r\n      data-slot=\"timeline-item-bullet\"\r\n      class={cn(\r\n        `absolute top-0 flex items-center justify-center rounded-full border border-primary/30 bg-background`,\r\n        props.isActive && \"border-primary\",\r\n      )}\r\n      style={{\r\n        width: `${props.bulletSize}px`,\r\n        height: `${props.bulletSize}px`,\r\n        left: `${-props.bulletSize / 2 - props.lineSize / 2}px`,\r\n        \"border-width\": `${props.lineSize}px`,\r\n      }}\r\n      aria-hidden=\"true\"\r\n    >\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst TimelineItemTitle: ParentComponent = (props) => {\r\n  return (\r\n    <div\r\n      data-slot=\"timeline-item-title\"\r\n      class=\"mb-1 text-base leading-none font-semibold\"\r\n    >\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst TimelineItemDescription: Component<ComponentProps<\"p\">> = (props) => {\r\n  const [local, others] = splitProps(props, [\"class\", \"children\"]);\r\n  return (\r\n    <p\r\n      data-slot=\"timeline-item-description\"\r\n      class={cn(\"text-sm text-muted-foreground\", local.class)}\r\n      {...others}\r\n    >\r\n      {local.children}\r\n    </p>\r\n  );\r\n};\r\n\r\nexport { Timeline };\r\n",
      "type": "registry:ui"
    }
  ]
}
