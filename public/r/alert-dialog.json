{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "alert-dialog",
  "type": "registry:ui",
  "dependencies": ["@kobalte/core"],
  "registryDependencies": ["button"],
  "files": [
    {
      "path": "src/registry/items/ui/alert-dialog.tsx",
      "content": "import type { PolymorphicProps } from \"@kobalte/core/polymorphic\";\nimport type { JSX, ValidComponent } from \"solid-js\";\n\nimport { splitProps } from \"solid-js\";\nimport * as AlertDialogPrimitive from \"@kobalte/core/alert-dialog\";\nimport XIcon from \"lucide-solid/icons/x\";\n\nimport { cn } from \"~/lib/utils\";\nimport { buttonVariants } from \"./button\";\n\ntype AlertDialogProps = AlertDialogPrimitive.AlertDialogRootProps;\n\nconst AlertDialog = (props: AlertDialogProps) => {\n  return <AlertDialogPrimitive.Root data-slot=\"alert-dialog\" {...props} />;\n};\n\nconst AlertDialogTrigger = <T extends ValidComponent = \"button\">(\n  props: PolymorphicProps<T, AlertDialogPrimitive.AlertDialogTriggerProps<T>>,\n) => {\n  return (\n    <AlertDialogPrimitive.Trigger data-slot=\"alert-dialog-trigger\" {...props} />\n  );\n};\n\ntype AlertDialogPortalProps = AlertDialogPrimitive.AlertDialogPortalProps;\n\nconst AlertDialogPortal = (props: AlertDialogPortalProps) => {\n  return (\n    <AlertDialogPrimitive.Portal data-slot=\"alert-dialog-portal\" {...props} />\n  );\n};\n\ntype AlertDialogOverlayProps<T extends ValidComponent = \"div\"> =\n  AlertDialogPrimitive.AlertDialogOverlayProps<T> & {\n    class?: string | undefined;\n  };\n\nconst AlertDialogOverlay = <T extends ValidComponent = \"div\">(\n  props: PolymorphicProps<T, AlertDialogOverlayProps<T>>,\n) => {\n  const [local, others] = splitProps(props as AlertDialogOverlayProps, [\n    \"class\",\n  ]);\n  return (\n    <AlertDialogPrimitive.Overlay\n      data-slot=\"alert-dialog-overlay\"\n      class={cn(\n        \"fixed inset-0 z-50 bg-overlay ui-expanded:animate-in ui-expanded:fade-in-0 ui-closed:animate-out ui-closed:fade-out-0\",\n        local.class,\n      )}\n      {...others}\n    />\n  );\n};\n\ntype AlertDialogContentProps<T extends ValidComponent = \"div\"> =\n  AlertDialogPrimitive.AlertDialogContentProps<T> & {\n    class?: string | undefined;\n    children?: JSX.Element;\n  };\n\nconst AlertDialogContent = <T extends ValidComponent = \"div\">(\n  props: PolymorphicProps<T, AlertDialogContentProps<T>>,\n) => {\n  const [local, others] = splitProps(props as AlertDialogContentProps, [\n    \"class\",\n    \"children\",\n  ]);\n  return (\n    <AlertDialogPortal>\n      <AlertDialogOverlay />\n      <AlertDialogPrimitive.Content\n        data-slot=\"alert-dialog-content\"\n        class={cn(\n          \"fixed top-[50%] left-[50%] z-50 grid w-full max-w-[calc(100%-2rem)] translate-x-[-50%] translate-y-[-50%] gap-4 rounded-base border-2 border-border bg-background p-6 shadow-shadow duration-200 sm:max-w-lg ui-expanded:animate-in ui-expanded:fade-in-0 ui-expanded:zoom-in-95 ui-closed:animate-out ui-closed:fade-out-0 ui-closed:zoom-out-95\",\n          local.class,\n        )}\n        {...others}\n      >\n        {local.children}\n        <AlertDialogPrimitive.CloseButton\n          data-slot=\"alert-dialog-close\"\n          class={cn(\n            buttonVariants({ variant: \"neutral\", size: \"icon\" }),\n            \"absolute top-2 right-3 size-8\",\n          )}\n        >\n          <XIcon class=\"size-4\" />\n          <span class=\"sr-only\">Close</span>\n        </AlertDialogPrimitive.CloseButton>\n      </AlertDialogPrimitive.Content>\n    </AlertDialogPortal>\n  );\n};\n\ntype AlertDialogTitleProps<T extends ValidComponent = \"h2\"> =\n  AlertDialogPrimitive.AlertDialogTitleProps<T> & {\n    class?: string | undefined;\n  };\n\nconst AlertDialogTitle = <T extends ValidComponent = \"h2\">(\n  props: PolymorphicProps<T, AlertDialogTitleProps<T>>,\n) => {\n  const [local, others] = splitProps(props as AlertDialogTitleProps, [\"class\"]);\n  return (\n    <AlertDialogPrimitive.Title\n      data-slot=\"alert-dialog-title\"\n      class={cn(\"text-lg font-semibold\", local.class)}\n      {...others}\n    />\n  );\n};\n\ntype AlertDialogDescriptionProps<T extends ValidComponent = \"p\"> =\n  AlertDialogPrimitive.AlertDialogDescriptionProps<T> & {\n    class?: string | undefined;\n  };\n\nconst AlertDialogDescription = <T extends ValidComponent = \"p\">(\n  props: PolymorphicProps<T, AlertDialogDescriptionProps<T>>,\n) => {\n  const [local, others] = splitProps(props as AlertDialogDescriptionProps, [\n    \"class\",\n  ]);\n  return (\n    <AlertDialogPrimitive.Description\n      data-slot=\"alert-dialog-description\"\n      class={cn(\"text-sm text-muted-foreground\", local.class)}\n      {...others}\n    />\n  );\n};\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogTitle,\n  AlertDialogDescription,\n};\n",
      "type": "registry:ui",
      "target": "ui/alert-dialog.tsx"
    }
  ]
}
