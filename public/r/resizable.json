{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "resizable",
  "type": "registry:ui",
  "dependencies": ["@corvu/resizable"],
  "files": [
    {
      "path": "src/registry/items/ui/resizable.tsx",
      "content": "import type { DynamicProps, HandleProps, RootProps } from \"@corvu/resizable\";\nimport type { ValidComponent } from \"solid-js\";\n\nimport { Show, splitProps } from \"solid-js\";\nimport ResizablePrimitive from \"@corvu/resizable\";\nimport GripVerticalIcon from \"lucide-solid/icons/grip-vertical\";\n\nimport { cn } from \"~/lib/utils\";\n\ntype ResizableProps<T extends ValidComponent = \"div\"> = RootProps<T> & {\n  class?: string;\n};\n\nconst Resizable = <T extends ValidComponent = \"div\">(\n  props: DynamicProps<T, ResizableProps<T>>,\n) => {\n  const [, rest] = splitProps(props as ResizableProps, [\"class\"]);\n  return (\n    <ResizablePrimitive\n      data-slot=\"resizable\"\n      class={cn(\n        \"flex size-full data-[orientation=vertical]:flex-col\",\n        props.class,\n      )}\n      {...rest}\n    />\n  );\n};\n\nconst ResizablePanel = ResizablePrimitive.Panel;\n\ntype ResizableHandleProps<T extends ValidComponent = \"button\"> =\n  HandleProps<T> & {\n    class?: string;\n    withHandle?: boolean;\n  };\n\nconst ResizableHandle = <T extends ValidComponent = \"button\">(\n  props: DynamicProps<T, ResizableHandleProps<T>>,\n) => {\n  const [, rest] = splitProps(props as ResizableHandleProps, [\n    \"class\",\n    \"withHandle\",\n  ]);\n  return (\n    <ResizablePrimitive.Handle\n      data-slot=\"resizable-handle\"\n      class={cn(\n        \"relative flex w-px shrink-0 items-center justify-center bg-border after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 focus-visible:outline-none data-[orientation=vertical]:h-px data-[orientation=vertical]:w-full data-[orientation=vertical]:after:left-0 data-[orientation=vertical]:after:h-1 data-[orientation=vertical]:after:w-full data-[orientation=vertical]:after:translate-x-0 data-[orientation=vertical]:after:-translate-y-1/2 [&[data-orientation=vertical]>div]:rotate-90\",\n        props.class,\n      )}\n      {...rest}\n    >\n      <Show when={props.withHandle}>\n        <div\n          data-slot=\"resizable-grip\"\n          class=\"z-10 flex h-5 w-4 items-center justify-center rounded-base border bg-primary text-primary-foreground\"\n        >\n          <GripVerticalIcon class=\"size-3\" />\n        </div>\n      </Show>\n    </ResizablePrimitive.Handle>\n  );\n};\n\nexport { Resizable, ResizablePanel, ResizableHandle };\n",
      "type": "registry:ui"
    }
  ]
}
