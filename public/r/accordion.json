{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "accordion",
  "type": "registry:ui",
  "dependencies": ["@kobalte/core"],
  "files": [
    {
      "path": "src/registry/items/ui/accordion.tsx",
      "content": "import type { PolymorphicProps } from \"@kobalte/core/polymorphic\";\r\nimport type { JSX, ValidComponent } from \"solid-js\";\r\n\r\nimport { splitProps } from \"solid-js\";\r\nimport * as AccordionPrimitive from \"@kobalte/core/accordion\";\r\nimport { ChevronDownIcon } from \"lucide-solid\";\r\n\r\nimport { cn } from \"~/lib/utils\";\r\n\r\nconst Accordion = <T extends ValidComponent = \"div\">(\r\n  props: PolymorphicProps<T, AccordionPrimitive.AccordionRootProps<T>>,\r\n) => {\r\n  return <AccordionPrimitive.Root data-slot=\"accordion\" {...props} />;\r\n};\r\n\r\ntype AccordionItemProps<T extends ValidComponent = \"div\"> =\r\n  AccordionPrimitive.AccordionItemProps<T> & {\r\n    class?: string | undefined;\r\n  };\r\n\r\nconst AccordionItem = <T extends ValidComponent = \"div\">(\r\n  props: PolymorphicProps<T, AccordionItemProps<T>>,\r\n) => {\r\n  const [local, others] = splitProps(props as AccordionItemProps, [\"class\"]);\r\n  return (\r\n    <AccordionPrimitive.Item\r\n      data-slot=\"accordion-item\"\r\n      class={cn(\r\n        \"overflow-hidden rounded-base border-2 border-b border-border shadow-shadow\",\r\n        local.class,\r\n      )}\r\n      {...others}\r\n    />\r\n  );\r\n};\r\n\r\ntype AccordionTriggerProps<T extends ValidComponent = \"button\"> =\r\n  AccordionPrimitive.AccordionTriggerProps<T> & {\r\n    class?: string | undefined;\r\n    children?: JSX.Element;\r\n  };\r\n\r\nconst AccordionTrigger = <T extends ValidComponent = \"button\">(\r\n  props: PolymorphicProps<T, AccordionTriggerProps<T>>,\r\n) => {\r\n  const [local, others] = splitProps(props as AccordionTriggerProps, [\r\n    \"class\",\r\n    \"children\",\r\n  ]);\r\n  return (\r\n    <AccordionPrimitive.Header data-slot=\"accordion-header\" class=\"flex\">\r\n      <AccordionPrimitive.Trigger\r\n        data-slot=\"accordion-trigger\"\r\n        class={cn(\r\n          \"ui flex flex-1 items-center justify-between border-border bg-primary p-4 text-left text-base font-heading text-primary-foreground transition-all focus-visible:ring-[3px] disabled:pointer-events-none disabled:opacity-50 ui-expanded:rounded-b-none ui-expanded:border-b-2 ui-expanded:[&_svg]:rotate-180\",\r\n          local.class,\r\n        )}\r\n        {...others}\r\n      >\r\n        {local.children}\r\n        <ChevronDownIcon class=\"pointer-events-none size-5 shrink-0 transition-transform duration-200\" />\r\n      </AccordionPrimitive.Trigger>\r\n    </AccordionPrimitive.Header>\r\n  );\r\n};\r\n\r\ntype AccordionContentProps<T extends ValidComponent = \"div\"> =\r\n  AccordionPrimitive.AccordionContentProps<T> & {\r\n    class?: string | undefined;\r\n    children?: JSX.Element;\r\n  };\r\n\r\nconst AccordionContent = <T extends ValidComponent = \"div\">(\r\n  props: PolymorphicProps<T, AccordionContentProps<T>>,\r\n) => {\r\n  const [local, others] = splitProps(props as AccordionContentProps, [\r\n    \"class\",\r\n    \"children\",\r\n  ]);\r\n  return (\r\n    <AccordionPrimitive.Content\r\n      data-slot=\"accordion-content\"\r\n      class={cn(\r\n        \"overflow-hidden rounded-b-base bg-secondary-background text-sm font-base transition-all ui-expanded:animate-accordion-down ui-closed:animate-accordion-up\",\r\n        local.class,\r\n      )}\r\n      {...others}\r\n    >\r\n      <div class=\"p-4\">{local.children}</div>\r\n    </AccordionPrimitive.Content>\r\n  );\r\n};\r\n\r\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent };\r\n",
      "type": "registry:ui"
    }
  ]
}
