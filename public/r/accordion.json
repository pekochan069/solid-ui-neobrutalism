{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "accordion",
  "type": "registry:ui",
  "dependencies": ["@kobalte/core"],
  "files": [
    {
      "path": "src/registry/items/ui/accordion.tsx",
      "content": "import type { PolymorphicProps } from \"@kobalte/core/polymorphic\";\nimport type { JSX, ValidComponent } from \"solid-js\";\n\nimport { splitProps } from \"solid-js\";\nimport * as AccordionPrimitive from \"@kobalte/core/accordion\";\nimport ChevronDownIcon from \"lucide-solid/icons/chevron-down\";\n\nimport { cn } from \"~/lib/utils\";\n\nconst Accordion = <T extends ValidComponent = \"div\">(\n  props: PolymorphicProps<T, AccordionPrimitive.AccordionRootProps<T>>,\n) => {\n  return <AccordionPrimitive.Root data-slot=\"accordion\" {...props} />;\n};\n\ntype AccordionItemProps<T extends ValidComponent = \"div\"> =\n  AccordionPrimitive.AccordionItemProps<T> & {\n    class?: string | undefined;\n  };\n\nconst AccordionItem = <T extends ValidComponent = \"div\">(\n  props: PolymorphicProps<T, AccordionItemProps<T>>,\n) => {\n  const [local, others] = splitProps(props as AccordionItemProps, [\"class\"]);\n  return (\n    <AccordionPrimitive.Item\n      data-slot=\"accordion-item\"\n      class={cn(\n        \"overflow-hidden rounded-base border-2 border-b border-border shadow-shadow\",\n        local.class,\n      )}\n      {...others}\n    />\n  );\n};\n\ntype AccordionTriggerProps<T extends ValidComponent = \"button\"> =\n  AccordionPrimitive.AccordionTriggerProps<T> & {\n    class?: string | undefined;\n    children?: JSX.Element;\n  };\n\nconst AccordionTrigger = <T extends ValidComponent = \"button\">(\n  props: PolymorphicProps<T, AccordionTriggerProps<T>>,\n) => {\n  const [local, others] = splitProps(props as AccordionTriggerProps, [\n    \"class\",\n    \"children\",\n  ]);\n  return (\n    <AccordionPrimitive.Header data-slot=\"accordion-header\" class=\"flex\">\n      <AccordionPrimitive.Trigger\n        data-slot=\"accordion-trigger\"\n        class={cn(\n          \"ui flex flex-1 items-center justify-between border-border bg-primary p-4 text-left text-base font-heading text-primary-foreground transition-all focus-visible:ring-[3px] disabled:pointer-events-none disabled:opacity-50 ui-expanded:rounded-b-none ui-expanded:border-b-2 ui-expanded:[&_svg]:rotate-180\",\n          local.class,\n        )}\n        {...others}\n      >\n        {local.children}\n        <ChevronDownIcon class=\"pointer-events-none size-5 shrink-0 transition-transform duration-200\" />\n      </AccordionPrimitive.Trigger>\n    </AccordionPrimitive.Header>\n  );\n};\n\ntype AccordionContentProps<T extends ValidComponent = \"div\"> =\n  AccordionPrimitive.AccordionContentProps<T> & {\n    class?: string | undefined;\n    children?: JSX.Element;\n  };\n\nconst AccordionContent = <T extends ValidComponent = \"div\">(\n  props: PolymorphicProps<T, AccordionContentProps<T>>,\n) => {\n  const [local, others] = splitProps(props as AccordionContentProps, [\n    \"class\",\n    \"children\",\n  ]);\n  return (\n    <AccordionPrimitive.Content\n      data-slot=\"accordion-content\"\n      class={cn(\n        \"overflow-hidden rounded-b-base bg-secondary-background text-sm font-base transition-all ui-expanded:animate-accordion-down ui-closed:animate-accordion-up\",\n        local.class,\n      )}\n      {...others}\n    >\n      <div class=\"p-4\">{local.children}</div>\n    </AccordionPrimitive.Content>\n  );\n};\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent };\n",
      "type": "registry:ui"
    }
  ]
}
