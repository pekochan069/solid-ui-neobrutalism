{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "otp-field",
  "type": "registry:ui",
  "dependencies": ["@corvu/otp-field"],
  "files": [
    {
      "path": "src/registry/items/ui/otp-field.tsx",
      "content": "import type { DynamicProps, RootProps } from \"@corvu/otp-field\";\nimport type { Component, ComponentProps, ValidComponent } from \"solid-js\";\n\nimport { Show, splitProps } from \"solid-js\";\nimport OtpField from \"@corvu/otp-field\";\nimport DotIcon from \"lucide-solid/icons/dot\";\n\nimport { cn } from \"~/lib/utils\";\n\nexport const REGEXP_ONLY_DIGITS = \"^\\\\d*$\";\nexport const REGEXP_ONLY_CHARS = \"^[a-zA-Z]*$\";\nexport const REGEXP_ONLY_DIGITS_AND_CHARS = \"^[a-zA-Z0-9]*$\";\n\ntype OTPFieldProps<T extends ValidComponent = \"div\"> = RootProps<T> & {\n  class?: string;\n};\n\nconst OTPField = <T extends ValidComponent = \"div\">(\n  props: DynamicProps<T, OTPFieldProps<T>>,\n) => {\n  const [local, others] = splitProps(props as OTPFieldProps, [\"class\"]);\n  return (\n    <OtpField\n      data-slot=\"otp-field\"\n      class={cn(\n        \"flex items-center gap-2 disabled:cursor-not-allowed has-[:disabled]:opacity-50\",\n        local.class,\n      )}\n      {...others}\n    />\n  );\n};\n\nconst OTPFieldInput = OtpField.Input;\n\nconst OTPFieldGroup: Component<ComponentProps<\"div\">> = (props) => {\n  const [local, others] = splitProps(props, [\"class\"]);\n  return <div class={cn(\"flex items-center\", local.class)} {...others} />;\n};\n\nconst OTPFieldSlot: Component<ComponentProps<\"div\"> & { index: number }> = (\n  props,\n) => {\n  const [local, others] = splitProps(props, [\"class\", \"index\"]);\n  const context = OtpField.useContext();\n  const char = () => context.value()[local.index];\n  const showFakeCaret = () =>\n    context.value().length === local.index && context.isInserting();\n\n  return (\n    <div\n      data-slot=\"otp-field-slot\"\n      class={cn(\n        \"group relative flex size-10 items-center justify-center border-y border-r-2 border-border text-sm first:rounded-l-base first:border-l-2 last:rounded-r-base\",\n        local.class,\n      )}\n      {...others}\n    >\n      <div\n        class={cn(\n          \"absolute inset-0 z-10 transition-all group-first:rounded-l-base group-last:rounded-r-base\",\n          context.activeSlots().includes(local.index) &&\n            \"ring-2 ring-primary ring-offset-background\",\n        )}\n      />\n      {char()}\n      <Show when={showFakeCaret()}>\n        <div class=\"pointer-events-none absolute inset-0 flex items-center justify-center\">\n          <div class=\"h-4 w-px animate-caret-blink bg-foreground duration-1000\" />\n        </div>\n      </Show>\n    </div>\n  );\n};\n\nconst OTPFieldSeparator: Component<ComponentProps<\"div\">> = (props) => {\n  return (\n    <div data-slot=\"otp-field-separator\" {...props}>\n      <DotIcon class=\"size-6\" />\n    </div>\n  );\n};\n\nexport {\n  OTPField,\n  OTPFieldInput,\n  OTPFieldGroup,\n  OTPFieldSlot,\n  OTPFieldSeparator,\n};\n",
      "type": "registry:ui"
    }
  ]
}
