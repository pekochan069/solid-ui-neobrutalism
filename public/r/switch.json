{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "switch",
  "type": "registry:ui",
  "dependencies": ["@kobalte/core"],
  "files": [
    {
      "path": "src/registry/items/ui/switch.tsx",
      "content": "import type { PolymorphicProps } from \"@kobalte/core\";\nimport type { JSX, ValidComponent } from \"solid-js\";\n\nimport { splitProps } from \"solid-js\";\nimport * as SwitchPrimitive from \"@kobalte/core/switch\";\n\nimport { cn } from \"~/lib/utils\";\n\nconst Switch = <T extends ValidComponent = \"div\">(\n  props: PolymorphicProps<T, SwitchPrimitive.SwitchRootProps<T>>,\n) => {\n  return <SwitchPrimitive.Root data-slot=\"switch\" {...props} />;\n};\n\nconst SwitchDescription = <T extends ValidComponent = \"div\">(\n  props: PolymorphicProps<T, SwitchPrimitive.SwitchDescriptionProps<T>>,\n) => {\n  return (\n    <SwitchPrimitive.Description data-slot=\"switch-description\" {...props} />\n  );\n};\n\nconst SwitchErrorMessage = <T extends ValidComponent = \"div\">(\n  props: PolymorphicProps<T, SwitchPrimitive.SwitchErrorMessageProps<T>>,\n) => {\n  return (\n    <SwitchPrimitive.ErrorMessage data-slot=\"switch-error-message\" {...props} />\n  );\n};\n\ntype SwitchControlProps = SwitchPrimitive.SwitchControlProps & {\n  class?: string | undefined;\n  children?: JSX.Element;\n};\n\nconst SwitchControl = <T extends ValidComponent = \"input\">(\n  props: PolymorphicProps<T, SwitchControlProps>,\n) => {\n  const [local, others] = splitProps(props as SwitchControlProps, [\n    \"class\",\n    \"children\",\n  ]);\n  return (\n    <>\n      <SwitchPrimitive.Input\n        data-slot=\"switch-input\"\n        class={cn(\n          \"[&:focus-visible+div]:ring-2 [&:focus-visible+div]:ring-ring [&:focus-visible+div]:ring-offset-2 [&:focus-visible+div]:ring-offset-background [&:focus-visible+div]:outline-none\",\n          local.class,\n        )}\n      />\n      <SwitchPrimitive.Control\n        data-slot=\"switch-control\"\n        class={cn(\n          \"inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-border bg-secondary-background transition-[color,background-color,box-shadow] ui-disabled:cursor-not-allowed ui-disabled:opacity-50 ui-checked:bg-primary\",\n          local.class,\n        )}\n        {...others}\n      >\n        {local.children}\n      </SwitchPrimitive.Control>\n    </>\n  );\n};\n\ntype SwitchThumbProps = SwitchPrimitive.SwitchThumbProps & {\n  class?: string | undefined;\n};\n\nconst SwitchThumb = <T extends ValidComponent = \"div\">(\n  props: PolymorphicProps<T, SwitchThumbProps>,\n) => {\n  const [local, others] = splitProps(props as SwitchThumbProps, [\"class\"]);\n  return (\n    <SwitchPrimitive.Thumb\n      data-slot=\"switch-thumb\"\n      class={cn(\n        \"pointer-events-none block size-4 translate-x-1 rounded-full border-2 border-border bg-white ring-0 transition-transform ui-checked:translate-x-5\",\n        local.class,\n      )}\n      {...others}\n    />\n  );\n};\n\ntype SwitchLabelProps = SwitchPrimitive.SwitchLabelProps & {\n  class?: string | undefined;\n};\n\nconst SwitchLabel = <T extends ValidComponent = \"label\">(\n  props: PolymorphicProps<T, SwitchLabelProps>,\n) => {\n  const [local, others] = splitProps(props as SwitchLabelProps, [\"class\"]);\n  return (\n    <SwitchPrimitive.Label\n      data-slot=\"switch-label\"\n      class={cn(\n        \"text-sm leading-none font-medium ui-disabled:cursor-not-allowed ui-disabled:opacity-70\",\n        local.class,\n      )}\n      {...others}\n    />\n  );\n};\n\nexport {\n  Switch,\n  SwitchControl,\n  SwitchThumb,\n  SwitchLabel,\n  SwitchDescription,\n  SwitchErrorMessage,\n};\n",
      "type": "registry:ui"
    }
  ]
}
