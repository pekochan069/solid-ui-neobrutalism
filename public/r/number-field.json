{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "number-field",
  "type": "registry:ui",
  "dependencies": ["@kobalte/core"],
  "files": [
    {
      "path": "src/registry/items/ui/number-field.tsx",
      "content": "import type { PolymorphicProps } from \"@kobalte/core/polymorphic\";\r\nimport type { Component, ComponentProps, JSX, ValidComponent } from \"solid-js\";\r\n\r\nimport { Show, splitProps } from \"solid-js\";\r\nimport * as NumberFieldPrimitive from \"@kobalte/core/number-field\";\r\nimport { ChevronDownIcon, ChevronUpIcon } from \"lucide-solid\";\r\n\r\nimport { cn } from \"~/lib/utils\";\r\n\r\nconst NumberField = <T extends ValidComponent = \"div\">(\r\n  props: PolymorphicProps<T, NumberFieldPrimitive.NumberFieldRootProps<T>>,\r\n) => {\r\n  return (\r\n    <NumberFieldPrimitive.Root data-slot=\"number-field\" gutter={4} {...props} />\r\n  );\r\n};\r\n\r\nconst NumberFieldGroup: Component<ComponentProps<\"div\">> = (props) => {\r\n  const [local, others] = splitProps(props, [\"class\"]);\r\n  return (\r\n    <div\r\n      data-slot=\"number-field-group\"\r\n      class={cn(\r\n        \"relative rounded-md focus-within:ring-2 focus-within:ring-ring focus-within:ring-offset-2\",\r\n        local.class,\r\n      )}\r\n      {...others}\r\n    />\r\n  );\r\n};\r\n\r\ntype NumberFieldLabelProps<T extends ValidComponent = \"label\"> =\r\n  NumberFieldPrimitive.NumberFieldLabelProps<T> & {\r\n    class?: string | undefined;\r\n  };\r\n\r\nconst NumberFieldLabel = <T extends ValidComponent = \"label\">(\r\n  props: PolymorphicProps<T, NumberFieldLabelProps<T>>,\r\n) => {\r\n  const [local, others] = splitProps(props as NumberFieldLabelProps, [\"class\"]);\r\n  return (\r\n    <NumberFieldPrimitive.Label\r\n      data-slot=\"number-field-label\"\r\n      class={cn(\r\n        \"text-sm leading-none font-medium peer-disabled:cursor-not-allowed peer-disabled:opacity-70\",\r\n        local.class,\r\n      )}\r\n      {...others}\r\n    />\r\n  );\r\n};\r\n\r\ntype NumberFieldInputProps<T extends ValidComponent = \"input\"> =\r\n  NumberFieldPrimitive.NumberFieldInputProps<T> & {\r\n    class?: string | undefined;\r\n  };\r\n\r\nconst NumberFieldInput = <T extends ValidComponent = \"input\">(\r\n  props: PolymorphicProps<T, NumberFieldInputProps<T>>,\r\n) => {\r\n  const [local, others] = splitProps(props as NumberFieldInputProps, [\"class\"]);\r\n  return (\r\n    <NumberFieldPrimitive.Input\r\n      data-slot=\"number-field-input\"\r\n      class={cn(\r\n        \"flex h-10 w-full rounded-base border-2 border-border bg-transparent px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none disabled:cursor-not-allowed disabled:opacity-50 ui-invalid:border-error-foreground ui-invalid:text-error-foreground\",\r\n        local.class,\r\n      )}\r\n      {...others}\r\n    />\r\n  );\r\n};\r\n\r\ntype NumberFieldIncrementTriggerProps<T extends ValidComponent = \"button\"> =\r\n  NumberFieldPrimitive.NumberFieldIncrementTriggerProps<T> & {\r\n    class?: string | undefined;\r\n    children?: JSX.Element;\r\n  };\r\n\r\nconst NumberFieldIncrementTrigger = <T extends ValidComponent = \"button\">(\r\n  props: PolymorphicProps<T, NumberFieldIncrementTriggerProps<T>>,\r\n) => {\r\n  const [local, others] = splitProps(\r\n    props as NumberFieldIncrementTriggerProps,\r\n    [\"class\", \"children\"],\r\n  );\r\n  return (\r\n    <NumberFieldPrimitive.IncrementTrigger\r\n      data-slot=\"number-field-increment-trigger\"\r\n      class={cn(\r\n        \"absolute top-1 right-1 inline-flex size-4 items-center justify-center\",\r\n        local.class,\r\n      )}\r\n      {...others}\r\n    >\r\n      <Show when={local.children} fallback={<ChevronUpIcon class=\"size-4\" />}>\r\n        {(children) => children()}\r\n      </Show>\r\n    </NumberFieldPrimitive.IncrementTrigger>\r\n  );\r\n};\r\n\r\ntype NumberFieldDecrementTriggerProps<T extends ValidComponent = \"button\"> =\r\n  NumberFieldPrimitive.NumberFieldDecrementTriggerProps<T> & {\r\n    class?: string | undefined;\r\n    children?: JSX.Element;\r\n  };\r\n\r\nconst NumberFieldDecrementTrigger = <T extends ValidComponent = \"button\">(\r\n  props: PolymorphicProps<T, NumberFieldDecrementTriggerProps<T>>,\r\n) => {\r\n  const [local, others] = splitProps(\r\n    props as NumberFieldDecrementTriggerProps,\r\n    [\"class\", \"children\"],\r\n  );\r\n  return (\r\n    <NumberFieldPrimitive.DecrementTrigger\r\n      data-slot=\"number-field-decrement-trigger\"\r\n      class={cn(\r\n        \"absolute right-1 bottom-1 inline-flex size-4 items-center justify-center\",\r\n        local.class,\r\n      )}\r\n      {...others}\r\n    >\r\n      <Show when={local.children} fallback={<ChevronDownIcon class=\"size-4\" />}>\r\n        {(children) => children()}\r\n      </Show>\r\n    </NumberFieldPrimitive.DecrementTrigger>\r\n  );\r\n};\r\n\r\ntype NumberFieldDescriptionProps<T extends ValidComponent = \"div\"> =\r\n  NumberFieldPrimitive.NumberFieldDescriptionProps<T> & {\r\n    class?: string | undefined;\r\n  };\r\n\r\nconst NumberFieldDescription = <T extends ValidComponent = \"div\">(\r\n  props: PolymorphicProps<T, NumberFieldDescriptionProps<T>>,\r\n) => {\r\n  const [local, others] = splitProps(props as NumberFieldDescriptionProps, [\r\n    \"class\",\r\n  ]);\r\n  return (\r\n    <NumberFieldPrimitive.Description\r\n      data-slot=\"number-field-description\"\r\n      class={cn(\"text-sm text-muted-foreground\", local.class)}\r\n      {...others}\r\n    />\r\n  );\r\n};\r\n\r\ntype NumberFieldErrorMessageProps<T extends ValidComponent = \"div\"> =\r\n  NumberFieldPrimitive.NumberFieldErrorMessageProps<T> & {\r\n    class?: string | undefined;\r\n  };\r\n\r\nconst NumberFieldErrorMessage = <T extends ValidComponent = \"div\">(\r\n  props: PolymorphicProps<T, NumberFieldErrorMessageProps<T>>,\r\n) => {\r\n  const [local, others] = splitProps(props as NumberFieldErrorMessageProps, [\r\n    \"class\",\r\n  ]);\r\n  return (\r\n    <NumberFieldPrimitive.ErrorMessage\r\n      data-slot=\"number-field-error-message\"\r\n      class={cn(\"text-sm text-error-foreground\", local.class)}\r\n      {...others}\r\n    />\r\n  );\r\n};\r\n\r\nexport {\r\n  NumberField,\r\n  NumberFieldGroup,\r\n  NumberFieldLabel,\r\n  NumberFieldInput,\r\n  NumberFieldIncrementTrigger,\r\n  NumberFieldDecrementTrigger,\r\n  NumberFieldDescription,\r\n  NumberFieldErrorMessage,\r\n};\r\n",
      "type": "registry:ui"
    }
  ]
}
