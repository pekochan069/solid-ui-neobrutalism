{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "toggle-group",
  "type": "registry:ui",
  "dependencies": ["@kobalte/core"],
  "registryDependencies": ["toggle"],
  "files": [
    {
      "path": "src/registry/items/ui/toggle-group.tsx",
      "content": "import type { PolymorphicProps } from \"@kobalte/core/polymorphic\";\r\nimport type { VariantProps } from \"class-variance-authority\";\r\nimport type { JSX, ValidComponent } from \"solid-js\";\r\n\r\nimport { createContext, splitProps, useContext } from \"solid-js\";\r\nimport * as ToggleGroupPrimitive from \"@kobalte/core/toggle-group\";\r\n\r\nimport { toggleVariants } from \"~/components/ui/toggle\";\r\nimport { cn } from \"~/lib/utils\";\r\n\r\nconst ToggleGroupContext = createContext<VariantProps<typeof toggleVariants>>({\r\n  size: \"default\",\r\n  variant: \"default\",\r\n});\r\n\r\ntype ToggleGroupRootProps<T extends ValidComponent = \"div\"> =\r\n  ToggleGroupPrimitive.ToggleGroupRootProps<T> &\r\n    VariantProps<typeof toggleVariants> & {\r\n      class?: string | undefined;\r\n      children?: JSX.Element;\r\n    };\r\n\r\nconst ToggleGroup = <T extends ValidComponent = \"div\">(\r\n  props: PolymorphicProps<T, ToggleGroupRootProps<T>>,\r\n) => {\r\n  const [local, others] = splitProps(props as ToggleGroupRootProps, [\r\n    \"class\",\r\n    \"children\",\r\n    \"size\",\r\n    \"variant\",\r\n  ]);\r\n\r\n  return (\r\n    <ToggleGroupPrimitive.Root\r\n      data-slot=\"toggle-group\"\r\n      class={cn(\"flex items-center justify-center gap-1\", local.class)}\r\n      {...others}\r\n    >\r\n      <ToggleGroupContext.Provider\r\n        value={{\r\n          get size() {\r\n            return local.size;\r\n          },\r\n          get variant() {\r\n            return local.variant;\r\n          },\r\n        }}\r\n      >\r\n        {local.children}\r\n      </ToggleGroupContext.Provider>\r\n    </ToggleGroupPrimitive.Root>\r\n  );\r\n};\r\n\r\ntype ToggleGroupItemProps<T extends ValidComponent = \"button\"> =\r\n  ToggleGroupPrimitive.ToggleGroupItemProps<T> &\r\n    VariantProps<typeof toggleVariants> & { class?: string | undefined };\r\n\r\nconst ToggleGroupItem = <T extends ValidComponent = \"button\">(\r\n  props: PolymorphicProps<T, ToggleGroupItemProps<T>>,\r\n) => {\r\n  const [local, others] = splitProps(props as ToggleGroupItemProps, [\r\n    \"class\",\r\n    \"size\",\r\n    \"variant\",\r\n  ]);\r\n  const context = useContext(ToggleGroupContext);\r\n  return (\r\n    <ToggleGroupPrimitive.Item\r\n      data-slot=\"toggle-group-item\"\r\n      class={cn(\r\n        toggleVariants({\r\n          size: context.size || local.size,\r\n          variant: context.variant || local.variant,\r\n        }),\r\n        \"border-2 border-border hover:bg-primary/20 hover:text-muted-foreground ui-pressed:bg-primary/40 ui-pressed:text-primary-foreground\",\r\n        local.class,\r\n      )}\r\n      {...others}\r\n    />\r\n  );\r\n};\r\n\r\nexport { ToggleGroup, ToggleGroupItem };\r\n",
      "type": "registry:ui"
    }
  ]
}
