{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "toggle-group",
  "type": "registry:ui",
  "dependencies": ["@kobalte/core"],
  "registryDependencies": ["toggle"],
  "files": [
    {
      "path": "src/registry/items/ui/toggle-group.tsx",
      "content": "import type { PolymorphicProps } from \"@kobalte/core/polymorphic\";\nimport type { VariantProps } from \"class-variance-authority\";\nimport type { JSX, ValidComponent } from \"solid-js\";\n\nimport { createContext, splitProps, useContext } from \"solid-js\";\nimport * as ToggleGroupPrimitive from \"@kobalte/core/toggle-group\";\n\nimport { toggleVariants } from \"~/components/ui/toggle\";\nimport { cn } from \"~/lib/utils\";\n\nconst ToggleGroupContext = createContext<VariantProps<typeof toggleVariants>>({\n  size: \"default\",\n  variant: \"default\",\n});\n\ntype ToggleGroupRootProps<T extends ValidComponent = \"div\"> =\n  ToggleGroupPrimitive.ToggleGroupRootProps<T> &\n    VariantProps<typeof toggleVariants> & {\n      class?: string | undefined;\n      children?: JSX.Element;\n    };\n\nconst ToggleGroup = <T extends ValidComponent = \"div\">(\n  props: PolymorphicProps<T, ToggleGroupRootProps<T>>,\n) => {\n  const [local, others] = splitProps(props as ToggleGroupRootProps, [\n    \"class\",\n    \"children\",\n    \"size\",\n    \"variant\",\n  ]);\n\n  return (\n    <ToggleGroupPrimitive.Root\n      data-slot=\"toggle-group\"\n      class={cn(\"flex items-center justify-center\", local.class)}\n      {...others}\n    >\n      <ToggleGroupContext.Provider\n        value={{\n          get size() {\n            return local.size;\n          },\n          get variant() {\n            return local.variant;\n          },\n        }}\n      >\n        {local.children}\n      </ToggleGroupContext.Provider>\n    </ToggleGroupPrimitive.Root>\n  );\n};\n\ntype ToggleGroupItemProps<T extends ValidComponent = \"button\"> =\n  ToggleGroupPrimitive.ToggleGroupItemProps<T> &\n    VariantProps<typeof toggleVariants> & { class?: string | undefined };\n\nconst ToggleGroupItem = <T extends ValidComponent = \"button\">(\n  props: PolymorphicProps<T, ToggleGroupItemProps<T>>,\n) => {\n  const [local, others] = splitProps(props as ToggleGroupItemProps, [\n    \"class\",\n    \"size\",\n    \"variant\",\n  ]);\n  const context = useContext(ToggleGroupContext);\n  return (\n    <ToggleGroupPrimitive.Item\n      data-slot=\"toggle-group-item\"\n      class={cn(\n        toggleVariants({\n          size: context.size || local.size,\n          variant: context.variant || local.variant,\n        }),\n        \"min-w-0 flex-1 shrink-0 rounded-none first:rounded-l-base last:rounded-r-base\",\n        local.variant !== \"transparent\" &&\n          \"border-y-2 border-r-2 border-l-0! first:border-l-2!\",\n        local.class,\n      )}\n      {...others}\n    />\n  );\n};\n\nexport { ToggleGroup, ToggleGroupItem };\n",
      "type": "registry:ui",
      "target": "ui/toggle-group.tsx"
    }
  ]
}
