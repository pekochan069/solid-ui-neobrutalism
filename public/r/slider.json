{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "slider",
  "type": "registry:ui",
  "dependencies": ["@kobalte/core"],
  "registryDependencies": ["label"],
  "files": [
    {
      "path": "src/registry/items/ui/slider.tsx",
      "content": "import type { PolymorphicProps } from \"@kobalte/core/polymorphic\";\r\nimport type { JSX, ValidComponent } from \"solid-js\";\r\n\r\nimport { splitProps } from \"solid-js\";\r\nimport * as SliderPrimitive from \"@kobalte/core/slider\";\r\n\r\nimport { Label } from \"~/components/ui/label\";\r\nimport { cn } from \"~/lib/utils\";\r\n\r\ntype SliderRootProps<T extends ValidComponent = \"div\"> =\r\n  SliderPrimitive.SliderRootProps<T> & {\r\n    class?: string | undefined;\r\n  };\r\n\r\nconst Slider = <T extends ValidComponent = \"div\">(\r\n  props: PolymorphicProps<T, SliderRootProps<T>>,\r\n) => {\r\n  const [local, others] = splitProps(props as SliderRootProps, [\"class\"]);\r\n  return (\r\n    <SliderPrimitive.Root\r\n      data-slot=\"slider\"\r\n      class={cn(\r\n        \"relative flex w-full touch-none flex-col items-center select-none\",\r\n        local.class,\r\n      )}\r\n      {...others}\r\n    />\r\n  );\r\n};\r\n\r\ntype SliderTrackProps<T extends ValidComponent = \"div\"> =\r\n  SliderPrimitive.SliderTrackProps<T> & {\r\n    class?: string | undefined;\r\n  };\r\n\r\nconst SliderTrack = <T extends ValidComponent = \"div\">(\r\n  props: PolymorphicProps<T, SliderTrackProps<T>>,\r\n) => {\r\n  const [local, others] = splitProps(props as SliderTrackProps, [\"class\"]);\r\n  return (\r\n    <SliderPrimitive.Track\r\n      data-slot=\"slider-track\"\r\n      class={cn(\r\n        \"relative h-3 w-full grow rounded-base border-2 border-border bg-secondary-background\",\r\n        local.class,\r\n      )}\r\n      {...others}\r\n    />\r\n  );\r\n};\r\n\r\ntype SliderFillProps<T extends ValidComponent = \"div\"> =\r\n  SliderPrimitive.SliderFillProps<T> & {\r\n    class?: string | undefined;\r\n  };\r\n\r\nconst SliderFill = <T extends ValidComponent = \"div\">(\r\n  props: PolymorphicProps<T, SliderFillProps<T>>,\r\n) => {\r\n  const [local, others] = splitProps(props as SliderFillProps, [\"class\"]);\r\n  return (\r\n    <SliderPrimitive.Fill\r\n      data-slot=\"slider-fill\"\r\n      class={cn(\"absolute h-full rounded-base bg-primary\", local.class)}\r\n      {...others}\r\n    />\r\n  );\r\n};\r\n\r\ntype SliderThumbProps<T extends ValidComponent = \"span\"> =\r\n  SliderPrimitive.SliderThumbProps<T> & {\r\n    class?: string | undefined;\r\n    children?: JSX.Element;\r\n  };\r\n\r\nconst SliderThumb = <T extends ValidComponent = \"span\">(\r\n  props: PolymorphicProps<T, SliderThumbProps<T>>,\r\n) => {\r\n  const [local, others] = splitProps(props as SliderThumbProps, [\r\n    \"class\",\r\n    \"children\",\r\n  ]);\r\n  return (\r\n    <SliderPrimitive.Thumb\r\n      data-slot=\"slider-thumb\"\r\n      class={cn(\r\n        \"-top-1.5 block size-5 rounded-full border-2 border-border bg-white ring-offset-white transition-colors focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:outline-none disabled:pointer-events-none disabled:opacity-50\",\r\n        local.class,\r\n      )}\r\n      {...others}\r\n    >\r\n      <SliderPrimitive.Input />\r\n    </SliderPrimitive.Thumb>\r\n  );\r\n};\r\n\r\nconst SliderLabel = <T extends ValidComponent = \"label\">(\r\n  props: PolymorphicProps<T, SliderPrimitive.SliderLabelProps<T>>,\r\n) => {\r\n  return (\r\n    <SliderPrimitive.Label data-slot=\"slider-label\" as={Label} {...props} />\r\n  );\r\n};\r\n\r\nconst SliderValueLabel = <T extends ValidComponent = \"label\">(\r\n  props: PolymorphicProps<T, SliderPrimitive.SliderValueLabelProps<T>>,\r\n) => {\r\n  return (\r\n    <SliderPrimitive.ValueLabel\r\n      data-slot=\"slider-value-label\"\r\n      as={Label}\r\n      {...props}\r\n    />\r\n  );\r\n};\r\n\r\nexport {\r\n  Slider,\r\n  SliderTrack,\r\n  SliderFill,\r\n  SliderThumb,\r\n  SliderLabel,\r\n  SliderValueLabel,\r\n};\r\n",
      "type": "registry:ui"
    }
  ]
}
