{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "select",
  "type": "registry:ui",
  "dependencies": ["@kobalte/core"],
  "files": [
    {
      "path": "src/registry/items/ui/select.tsx",
      "content": "import type { PolymorphicProps } from \"@kobalte/core/polymorphic\";\nimport type { JSX, ValidComponent } from \"solid-js\";\n\nimport { splitProps } from \"solid-js\";\nimport * as SelectPrimitive from \"@kobalte/core/select\";\nimport { cva } from \"class-variance-authority\";\nimport { CheckIcon, ChevronsUpDownIcon } from \"lucide-solid\";\n\nimport { cn } from \"~/lib/utils\";\n\nconst Select = <Option, OptGroup = never, T extends ValidComponent = \"div\">(\n  props: PolymorphicProps<\n    T,\n    SelectPrimitive.SelectRootProps<Option, OptGroup, T>\n  >,\n) => {\n  return <SelectPrimitive.Root data-slot=\"select\" {...props} />;\n};\n\nconst SelectValue = <Option, T extends ValidComponent = \"span\">(\n  props: PolymorphicProps<T, SelectPrimitive.SelectValueProps<Option, T>>,\n) => {\n  return <SelectPrimitive.Value data-slot=\"select-value\" {...props} />;\n};\n\nconst SelectHiddenSelect = (props: SelectPrimitive.SelectHiddenSelectProps) => {\n  return (\n    <SelectPrimitive.HiddenSelect data-slot=\"select-hidden-select\" {...props} />\n  );\n};\n\ntype SelectTriggerProps<T extends ValidComponent = \"button\"> =\n  SelectPrimitive.SelectTriggerProps<T> & {\n    class?: string | undefined;\n    children?: JSX.Element;\n  };\n\nconst SelectTrigger = <T extends ValidComponent = \"button\">(\n  props: PolymorphicProps<T, SelectTriggerProps<T>>,\n) => {\n  const [local, others] = splitProps(props as SelectTriggerProps, [\n    \"class\",\n    \"children\",\n  ]);\n  return (\n    <SelectPrimitive.Trigger\n      data-slot=\"select-trigger\"\n      class={cn(\n        \"flex h-10 w-full items-center justify-between rounded-base border-2 border-border bg-transparent px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:ring-2 focus:ring-ring focus:ring-offset-2 focus:outline-none disabled:cursor-not-allowed disabled:opacity-50\",\n        local.class,\n      )}\n      {...others}\n    >\n      {local.children}\n      <SelectPrimitive.Icon\n        as={ChevronsUpDownIcon}\n        class=\"size-4 opacity-50\"\n      ></SelectPrimitive.Icon>\n    </SelectPrimitive.Trigger>\n  );\n};\n\ntype SelectContentProps<T extends ValidComponent = \"div\"> =\n  SelectPrimitive.SelectContentProps<T> & { class?: string | undefined };\n\nconst SelectContent = <T extends ValidComponent = \"div\">(\n  props: PolymorphicProps<T, SelectContentProps<T>>,\n) => {\n  const [local, others] = splitProps(props as SelectContentProps, [\"class\"]);\n  return (\n    <SelectPrimitive.Portal>\n      <SelectPrimitive.Content\n        data-slot=\"select-content\"\n        class={cn(\n          \"relative z-50 min-w-32 overflow-hidden rounded-base border-2 bg-background text-foreground ui-expanded:animate-in ui-expanded:fade-in-0 ui-expanded:zoom-in-95 ui-closed:animate-out ui-closed:fade-out-0 ui-closed:zoom-out-95\",\n          local.class,\n        )}\n        {...others}\n      >\n        <SelectPrimitive.Listbox class=\"m-0 p-1\" />\n      </SelectPrimitive.Content>\n    </SelectPrimitive.Portal>\n  );\n};\n\ntype SelectItemProps<T extends ValidComponent = \"li\"> =\n  SelectPrimitive.SelectItemProps<T> & {\n    class?: string | undefined;\n    children?: JSX.Element;\n  };\n\nconst SelectItem = <T extends ValidComponent = \"li\">(\n  props: PolymorphicProps<T, SelectItemProps<T>>,\n) => {\n  const [local, others] = splitProps(props as SelectItemProps, [\n    \"class\",\n    \"children\",\n  ]);\n  return (\n    <SelectPrimitive.Item\n      data-slot=\"select-item\"\n      class={cn(\n        \"relative mt-0 flex w-full cursor-default items-center rounded-sm py-1.5 pr-8 pl-2 text-sm transition-colors outline-none select-none focus:bg-primary focus:text-primary-foreground ui-disabled:pointer-events-none ui-disabled:opacity-50\",\n        local.class,\n      )}\n      {...others}\n    >\n      <SelectPrimitive.ItemIndicator class=\"absolute right-2 flex size-3.5 items-center justify-center\">\n        <CheckIcon class=\"size-4\" />\n      </SelectPrimitive.ItemIndicator>\n      <SelectPrimitive.ItemLabel>{local.children}</SelectPrimitive.ItemLabel>\n    </SelectPrimitive.Item>\n  );\n};\n\nconst labelVariants = cva(\n  \"text-sm leading-none font-medium peer-disabled:cursor-not-allowed peer-disabled:opacity-70\",\n  {\n    variants: {\n      variant: {\n        label: \"ui-invalid:text-destructive\",\n        description: \"font-normal text-muted-foreground\",\n        error: \"text-destructive text-xs\",\n      },\n    },\n    defaultVariants: {\n      variant: \"label\",\n    },\n  },\n);\n\ntype SelectLabelProps<T extends ValidComponent = \"label\"> =\n  SelectPrimitive.SelectLabelProps<T> & {\n    class?: string | undefined;\n  };\n\nconst SelectLabel = <T extends ValidComponent = \"label\">(\n  props: PolymorphicProps<T, SelectLabelProps<T>>,\n) => {\n  const [local, others] = splitProps(props as SelectLabelProps, [\"class\"]);\n  return (\n    <SelectPrimitive.Label\n      data-slot=\"select-label\"\n      class={cn(labelVariants(), local.class)}\n      {...others}\n    />\n  );\n};\n\ntype SelectDescriptionProps<T extends ValidComponent = \"div\"> =\n  SelectPrimitive.SelectDescriptionProps<T> & {\n    class?: string | undefined;\n  };\n\nconst SelectDescription = <T extends ValidComponent = \"div\">(\n  props: PolymorphicProps<T, SelectDescriptionProps<T>>,\n) => {\n  const [local, others] = splitProps(props as SelectDescriptionProps, [\n    \"class\",\n  ]);\n  return (\n    <SelectPrimitive.Description\n      data-slot=\"select-description\"\n      class={cn(labelVariants({ variant: \"description\" }), local.class)}\n      {...others}\n    />\n  );\n};\n\ntype SelectErrorMessageProps<T extends ValidComponent = \"div\"> =\n  SelectPrimitive.SelectErrorMessageProps<T> & {\n    class?: string | undefined;\n  };\n\nconst SelectErrorMessage = <T extends ValidComponent = \"div\">(\n  props: PolymorphicProps<T, SelectErrorMessageProps<T>>,\n) => {\n  const [local, others] = splitProps(props as SelectErrorMessageProps, [\n    \"class\",\n  ]);\n  return (\n    <SelectPrimitive.ErrorMessage\n      data-slot=\"select-error-message\"\n      class={cn(labelVariants({ variant: \"error\" }), local.class)}\n      {...others}\n    />\n  );\n};\n\nexport {\n  Select,\n  SelectValue,\n  SelectHiddenSelect,\n  SelectTrigger,\n  SelectContent,\n  SelectItem,\n  SelectLabel,\n  SelectDescription,\n  SelectErrorMessage,\n};\n",
      "type": "registry:ui",
      "target": "ui/select.tsx"
    }
  ]
}
