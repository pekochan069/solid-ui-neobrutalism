{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "select",
  "type": "registry:ui",
  "dependencies": ["@kobalte/core"],
  "files": [
    {
      "path": "src/registry/items/ui/select.tsx",
      "content": "import type { PolymorphicProps } from \"@kobalte/core/polymorphic\";\r\nimport type { JSX, ValidComponent } from \"solid-js\";\r\n\r\nimport { splitProps } from \"solid-js\";\r\nimport * as SelectPrimitive from \"@kobalte/core/select\";\r\nimport { cva } from \"class-variance-authority\";\r\nimport { CheckIcon, ChevronsUpDownIcon } from \"lucide-solid\";\r\n\r\nimport { cn } from \"~/lib/utils\";\r\n\r\nconst Select = <Option, OptGroup = never, T extends ValidComponent = \"div\">(\r\n  props: PolymorphicProps<\r\n    T,\r\n    SelectPrimitive.SelectRootProps<Option, OptGroup, T>\r\n  >,\r\n) => {\r\n  return <SelectPrimitive.Root data-slot=\"select\" {...props} />;\r\n};\r\n\r\nconst SelectValue = <Option, T extends ValidComponent = \"span\">(\r\n  props: PolymorphicProps<T, SelectPrimitive.SelectValueProps<Option, T>>,\r\n) => {\r\n  return <SelectPrimitive.Value data-slot=\"select-value\" {...props} />;\r\n};\r\n\r\nconst SelectHiddenSelect = (props: SelectPrimitive.SelectHiddenSelectProps) => {\r\n  return (\r\n    <SelectPrimitive.HiddenSelect data-slot=\"select-hidden-select\" {...props} />\r\n  );\r\n};\r\n\r\ntype SelectTriggerProps<T extends ValidComponent = \"button\"> =\r\n  SelectPrimitive.SelectTriggerProps<T> & {\r\n    class?: string | undefined;\r\n    children?: JSX.Element;\r\n  };\r\n\r\nconst SelectTrigger = <T extends ValidComponent = \"button\">(\r\n  props: PolymorphicProps<T, SelectTriggerProps<T>>,\r\n) => {\r\n  const [local, others] = splitProps(props as SelectTriggerProps, [\r\n    \"class\",\r\n    \"children\",\r\n  ]);\r\n  return (\r\n    <SelectPrimitive.Trigger\r\n      data-slot=\"select-trigger\"\r\n      class={cn(\r\n        \"flex h-10 w-full items-center justify-between rounded-base border-2 border-border bg-transparent px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:ring-2 focus:ring-ring focus:ring-offset-2 focus:outline-none disabled:cursor-not-allowed disabled:opacity-50\",\r\n        local.class,\r\n      )}\r\n      {...others}\r\n    >\r\n      {local.children}\r\n      <SelectPrimitive.Icon\r\n        as={ChevronsUpDownIcon}\r\n        class=\"size-4 opacity-50\"\r\n      ></SelectPrimitive.Icon>\r\n    </SelectPrimitive.Trigger>\r\n  );\r\n};\r\n\r\ntype SelectContentProps<T extends ValidComponent = \"div\"> =\r\n  SelectPrimitive.SelectContentProps<T> & { class?: string | undefined };\r\n\r\nconst SelectContent = <T extends ValidComponent = \"div\">(\r\n  props: PolymorphicProps<T, SelectContentProps<T>>,\r\n) => {\r\n  const [local, others] = splitProps(props as SelectContentProps, [\"class\"]);\r\n  return (\r\n    <SelectPrimitive.Portal>\r\n      <SelectPrimitive.Content\r\n        data-slot=\"select-content\"\r\n        class={cn(\r\n          \"relative z-50 min-w-32 overflow-hidden rounded-base border-2 bg-background text-foreground ui-expanded:animate-in ui-expanded:fade-in-0 ui-expanded:zoom-in-95 ui-closed:animate-out ui-closed:fade-out-0 ui-closed:zoom-out-95\",\r\n          local.class,\r\n        )}\r\n        {...others}\r\n      >\r\n        <SelectPrimitive.Listbox class=\"m-0 p-1\" />\r\n      </SelectPrimitive.Content>\r\n    </SelectPrimitive.Portal>\r\n  );\r\n};\r\n\r\ntype SelectItemProps<T extends ValidComponent = \"li\"> =\r\n  SelectPrimitive.SelectItemProps<T> & {\r\n    class?: string | undefined;\r\n    children?: JSX.Element;\r\n  };\r\n\r\nconst SelectItem = <T extends ValidComponent = \"li\">(\r\n  props: PolymorphicProps<T, SelectItemProps<T>>,\r\n) => {\r\n  const [local, others] = splitProps(props as SelectItemProps, [\r\n    \"class\",\r\n    \"children\",\r\n  ]);\r\n  return (\r\n    <SelectPrimitive.Item\r\n      data-slot=\"select-item\"\r\n      class={cn(\r\n        \"relative mt-0 flex w-full cursor-default items-center rounded-sm py-1.5 pr-8 pl-2 text-sm transition-colors outline-none select-none focus:bg-primary focus:text-primary-foreground ui-disabled:pointer-events-none ui-disabled:opacity-50\",\r\n        local.class,\r\n      )}\r\n      {...others}\r\n    >\r\n      <SelectPrimitive.ItemIndicator class=\"absolute right-2 flex size-3.5 items-center justify-center\">\r\n        <CheckIcon class=\"size-4\" />\r\n      </SelectPrimitive.ItemIndicator>\r\n      <SelectPrimitive.ItemLabel>{local.children}</SelectPrimitive.ItemLabel>\r\n    </SelectPrimitive.Item>\r\n  );\r\n};\r\n\r\nconst labelVariants = cva(\r\n  \"text-sm leading-none font-medium peer-disabled:cursor-not-allowed peer-disabled:opacity-70\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        label: \"ui-invalid:text-destructive\",\r\n        description: \"font-normal text-muted-foreground\",\r\n        error: \"text-destructive text-xs\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"label\",\r\n    },\r\n  },\r\n);\r\n\r\ntype SelectLabelProps<T extends ValidComponent = \"label\"> =\r\n  SelectPrimitive.SelectLabelProps<T> & {\r\n    class?: string | undefined;\r\n  };\r\n\r\nconst SelectLabel = <T extends ValidComponent = \"label\">(\r\n  props: PolymorphicProps<T, SelectLabelProps<T>>,\r\n) => {\r\n  const [local, others] = splitProps(props as SelectLabelProps, [\"class\"]);\r\n  return (\r\n    <SelectPrimitive.Label\r\n      data-slot=\"select-label\"\r\n      class={cn(labelVariants(), local.class)}\r\n      {...others}\r\n    />\r\n  );\r\n};\r\n\r\ntype SelectDescriptionProps<T extends ValidComponent = \"div\"> =\r\n  SelectPrimitive.SelectDescriptionProps<T> & {\r\n    class?: string | undefined;\r\n  };\r\n\r\nconst SelectDescription = <T extends ValidComponent = \"div\">(\r\n  props: PolymorphicProps<T, SelectDescriptionProps<T>>,\r\n) => {\r\n  const [local, others] = splitProps(props as SelectDescriptionProps, [\r\n    \"class\",\r\n  ]);\r\n  return (\r\n    <SelectPrimitive.Description\r\n      data-slot=\"select-description\"\r\n      class={cn(labelVariants({ variant: \"description\" }), local.class)}\r\n      {...others}\r\n    />\r\n  );\r\n};\r\n\r\ntype SelectErrorMessageProps<T extends ValidComponent = \"div\"> =\r\n  SelectPrimitive.SelectErrorMessageProps<T> & {\r\n    class?: string | undefined;\r\n  };\r\n\r\nconst SelectErrorMessage = <T extends ValidComponent = \"div\">(\r\n  props: PolymorphicProps<T, SelectErrorMessageProps<T>>,\r\n) => {\r\n  const [local, others] = splitProps(props as SelectErrorMessageProps, [\r\n    \"class\",\r\n  ]);\r\n  return (\r\n    <SelectPrimitive.ErrorMessage\r\n      data-slot=\"select-error-message\"\r\n      class={cn(labelVariants({ variant: \"error\" }), local.class)}\r\n      {...others}\r\n    />\r\n  );\r\n};\r\n\r\nexport {\r\n  Select,\r\n  SelectValue,\r\n  SelectHiddenSelect,\r\n  SelectTrigger,\r\n  SelectContent,\r\n  SelectItem,\r\n  SelectLabel,\r\n  SelectDescription,\r\n  SelectErrorMessage,\r\n};\r\n",
      "type": "registry:ui"
    }
  ]
}
