{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "dropdown-menu",
  "type": "registry:ui",
  "dependencies": ["@kobalte/core"],
  "files": [
    {
      "path": "src/registry/items/ui/dropdown-menu.tsx",
      "content": "import type { PolymorphicProps } from \"@kobalte/core/polymorphic\";\nimport type { Component, ComponentProps, JSX, ValidComponent } from \"solid-js\";\n\nimport { splitProps } from \"solid-js\";\nimport * as DropdownMenuPrimitive from \"@kobalte/core/dropdown-menu\";\nimport CheckIcon from \"lucide-solid/icons/check\";\nimport ChevronRightIcon from \"lucide-solid/icons/chevron-right\";\nimport DotIcon from \"lucide-solid/icons/dot\";\n\nimport { cn } from \"~/lib/utils\";\n\nconst DropdownMenuTrigger = <T extends ValidComponent = \"button\">(\n  props: PolymorphicProps<T, DropdownMenuPrimitive.DropdownMenuTriggerProps<T>>,\n) => {\n  return (\n    <DropdownMenuPrimitive.Trigger\n      data-slot=\"dropdown-menu-trigger\"\n      {...props}\n    />\n  );\n};\n\nconst DropdownMenuPortal = (\n  props: DropdownMenuPrimitive.DropdownMenuPortalProps,\n) => {\n  return (\n    <DropdownMenuPrimitive.Portal data-slot=\"dropdown-menu-portal\" {...props} />\n  );\n};\n\nconst DropdownMenuSub = (props: DropdownMenuPrimitive.DropdownMenuSubProps) => {\n  return <DropdownMenuPrimitive.Sub data-slot=\"dropdown-menu-sub\" {...props} />;\n};\n\nconst DropdownMenuGroup = <T extends ValidComponent = \"div\">(\n  props: PolymorphicProps<T, DropdownMenuPrimitive.DropdownMenuGroupProps<T>>,\n) => {\n  return (\n    <DropdownMenuPrimitive.Group data-slot=\"dropdown-menu-group\" {...props} />\n  );\n};\n\nconst DropdownMenuRadioGroup = <\n  TValue = string,\n  T extends ValidComponent = \"div\",\n>(\n  props: PolymorphicProps<\n    T,\n    DropdownMenuPrimitive.DropdownMenuRadioGroupProps<T, TValue>\n  >,\n) => {\n  return (\n    <DropdownMenuPrimitive.RadioGroup\n      data-slot=\"dropdown-menu-radio-group\"\n      {...props}\n    />\n  );\n};\n\nconst DropdownMenu: Component<DropdownMenuPrimitive.DropdownMenuRootProps> = (\n  props,\n) => {\n  return (\n    <DropdownMenuPrimitive.Root\n      data-slot=\"dropdown-menu\"\n      gutter={4}\n      {...props}\n    />\n  );\n};\n\ntype DropdownMenuContentProps<T extends ValidComponent = \"div\"> =\n  DropdownMenuPrimitive.DropdownMenuContentProps<T> & {\n    class?: string | undefined;\n  };\n\nconst DropdownMenuContent = <T extends ValidComponent = \"div\">(\n  props: PolymorphicProps<T, DropdownMenuContentProps<T>>,\n) => {\n  const [, rest] = splitProps(props as DropdownMenuContentProps, [\"class\"]);\n  return (\n    <DropdownMenuPrimitive.Portal>\n      <DropdownMenuPrimitive.Content\n        data-slot=\"dropdown-menu-content\"\n        class={cn(\n          \"z-50 min-w-32 origin-[var(--kb-menu-content-transform-origin)] animate-out overflow-hidden rounded-base border-2 border-border bg-background p-1 text-foreground shadow-md ui-expanded:animate-in\",\n          props.class,\n        )}\n        {...rest}\n      />\n    </DropdownMenuPrimitive.Portal>\n  );\n};\n\ntype DropdownMenuItemProps<T extends ValidComponent = \"div\"> =\n  DropdownMenuPrimitive.DropdownMenuItemProps<T> & {\n    class?: string | undefined;\n  };\n\nconst DropdownMenuItem = <T extends ValidComponent = \"div\">(\n  props: PolymorphicProps<T, DropdownMenuItemProps<T>>,\n) => {\n  const [, rest] = splitProps(props as DropdownMenuItemProps, [\"class\"]);\n  return (\n    <DropdownMenuPrimitive.Item\n      data-slot=\"dropdown-menu-item\"\n      class={cn(\n        \"relative flex cursor-default items-center gap-2 rounded-base px-2 py-1.5 text-sm transition-colors outline-none select-none hover:bg-primary hover:text-primary-foreground focus:border-border ui-disabled:pointer-events-none ui-disabled:opacity-50\",\n        props.class,\n      )}\n      {...rest}\n    />\n  );\n};\n\nconst DropdownMenuShortcut: Component<ComponentProps<\"span\">> = (props) => {\n  const [, rest] = splitProps(props, [\"class\"]);\n  return (\n    <span\n      data-slot=\"dropdown-menu-shortcut\"\n      class={cn(\"ml-auto text-xs tracking-widest opacity-60\", props.class)}\n      {...rest}\n    />\n  );\n};\n\nconst DropdownMenuLabel: Component<\n  ComponentProps<\"div\"> & { inset?: boolean }\n> = (props) => {\n  const [, rest] = splitProps(props, [\"class\", \"inset\"]);\n  return (\n    <div\n      data-slot=\"dropdown-menu-label\"\n      class={cn(\n        \"px-2 py-1.5 text-sm font-semibold\",\n        props.inset && \"pl-8\",\n        props.class,\n      )}\n      {...rest}\n    />\n  );\n};\n\ntype DropdownMenuSeparatorProps<T extends ValidComponent = \"hr\"> =\n  DropdownMenuPrimitive.DropdownMenuSeparatorProps<T> & {\n    class?: string | undefined;\n  };\n\nconst DropdownMenuSeparator = <T extends ValidComponent = \"hr\">(\n  props: PolymorphicProps<T, DropdownMenuSeparatorProps<T>>,\n) => {\n  const [, rest] = splitProps(props as DropdownMenuSeparatorProps, [\"class\"]);\n  return (\n    <DropdownMenuPrimitive.Separator\n      data-slot=\"dropdown-menu-separator\"\n      class={cn(\"-mx-1 my-1 h-0.5 bg-border\", props.class)}\n      {...rest}\n    />\n  );\n};\n\ntype DropdownMenuSubTriggerProps<T extends ValidComponent = \"div\"> =\n  DropdownMenuPrimitive.DropdownMenuSubTriggerProps<T> & {\n    class?: string | undefined;\n    children?: JSX.Element;\n  };\n\nconst DropdownMenuSubTrigger = <T extends ValidComponent = \"div\">(\n  props: PolymorphicProps<T, DropdownMenuSubTriggerProps<T>>,\n) => {\n  const [, rest] = splitProps(props as DropdownMenuSubTriggerProps, [\n    \"class\",\n    \"children\",\n  ]);\n  return (\n    <DropdownMenuPrimitive.SubTrigger\n      data-slot=\"dropdown-menu-sub-trigger\"\n      class={cn(\n        \"flex cursor-default items-center rounded-base px-2 py-1.5 text-sm outline-none select-none focus:bg-primary ui-expanded:bg-primary\",\n        props.class,\n      )}\n      {...rest}\n    >\n      {props.children}\n      <ChevronRightIcon class=\"ml-auto size-4\" />\n    </DropdownMenuPrimitive.SubTrigger>\n  );\n};\n\ntype DropdownMenuSubContentProps<T extends ValidComponent = \"div\"> =\n  DropdownMenuPrimitive.DropdownMenuSubContentProps<T> & {\n    class?: string | undefined;\n  };\n\nconst DropdownMenuSubContent = <T extends ValidComponent = \"div\">(\n  props: PolymorphicProps<T, DropdownMenuSubContentProps<T>>,\n) => {\n  const [, rest] = splitProps(props as DropdownMenuSubContentProps, [\"class\"]);\n  return (\n    <DropdownMenuPrimitive.SubContent\n      data-slot=\"dropdown-menu-sub-content\"\n      class={cn(\n        \"shadow-base z-50 min-w-32 origin-[var(--kb-menu-content-transform-origin)] animate-in overflow-hidden rounded-md border-2 bg-background p-1 text-foreground\",\n        props.class,\n      )}\n      {...rest}\n    />\n  );\n};\n\ntype DropdownMenuCheckboxItemProps<T extends ValidComponent = \"div\"> =\n  DropdownMenuPrimitive.DropdownMenuCheckboxItemProps<T> & {\n    class?: string | undefined;\n    children?: JSX.Element;\n  };\n\nconst DropdownMenuCheckboxItem = <T extends ValidComponent = \"div\">(\n  props: PolymorphicProps<T, DropdownMenuCheckboxItemProps<T>>,\n) => {\n  const [, rest] = splitProps(props as DropdownMenuCheckboxItemProps, [\n    \"class\",\n    \"children\",\n  ]);\n  return (\n    <DropdownMenuPrimitive.CheckboxItem\n      data-slot=\"dropdown-menu-checkbox-item\"\n      class={cn(\n        \"relative flex cursor-default items-center rounded-base py-1.5 pr-2 pl-8 text-sm transition-colors outline-none select-none focus:bg-primary focus:text-primary-foreground ui-disabled:pointer-events-none ui-disabled:opacity-50\",\n        props.class,\n      )}\n      {...rest}\n    >\n      <span class=\"absolute left-2 flex size-3.5 items-center justify-center\">\n        <DropdownMenuPrimitive.ItemIndicator>\n          <CheckIcon class=\"size-4\" />\n        </DropdownMenuPrimitive.ItemIndicator>\n      </span>\n      {props.children}\n    </DropdownMenuPrimitive.CheckboxItem>\n  );\n};\n\ntype DropdownMenuGroupLabelProps<T extends ValidComponent = \"span\"> =\n  DropdownMenuPrimitive.DropdownMenuGroupLabelProps<T> & {\n    class?: string | undefined;\n  };\n\nconst DropdownMenuGroupLabel = <T extends ValidComponent = \"span\">(\n  props: PolymorphicProps<T, DropdownMenuGroupLabelProps<T>>,\n) => {\n  const [, rest] = splitProps(props as DropdownMenuGroupLabelProps, [\"class\"]);\n  return (\n    <DropdownMenuPrimitive.GroupLabel\n      data-slot=\"dropdown-menu-group-label\"\n      class={cn(\"px-2 py-1.5 text-sm font-semibold\", props.class)}\n      {...rest}\n    />\n  );\n};\n\ntype DropdownMenuRadioItemProps<T extends ValidComponent = \"div\"> =\n  DropdownMenuPrimitive.DropdownMenuRadioItemProps<T> & {\n    class?: string | undefined;\n    children?: JSX.Element;\n  };\n\nconst DropdownMenuRadioItem = <T extends ValidComponent = \"div\">(\n  props: PolymorphicProps<T, DropdownMenuRadioItemProps<T>>,\n) => {\n  const [, rest] = splitProps(props as DropdownMenuRadioItemProps, [\n    \"class\",\n    \"children\",\n  ]);\n  return (\n    <DropdownMenuPrimitive.RadioItem\n      data-slot=\"dropdown-menu-radio-item\"\n      class={cn(\n        \"relative flex cursor-default items-center rounded-base py-1.5 pr-2 pl-8 text-sm transition-colors outline-none select-none focus:bg-primary focus:text-primary-foreground ui-disabled:pointer-events-none ui-disabled:opacity-50\",\n        props.class,\n      )}\n      {...rest}\n    >\n      <span class=\"absolute left-2 flex size-3.5 items-center justify-center\">\n        <DropdownMenuPrimitive.ItemIndicator>\n          <DotIcon class=\"size-10\" />\n        </DropdownMenuPrimitive.ItemIndicator>\n      </span>\n      {props.children}\n    </DropdownMenuPrimitive.RadioItem>\n  );\n};\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuPortal,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuShortcut,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuSub,\n  DropdownMenuSubTrigger,\n  DropdownMenuSubContent,\n  DropdownMenuCheckboxItem,\n  DropdownMenuGroup,\n  DropdownMenuGroupLabel,\n  DropdownMenuRadioGroup,\n  DropdownMenuRadioItem,\n};\n",
      "type": "registry:ui",
      "target": "ui/dropdown-menu.tsx"
    }
  ]
}
