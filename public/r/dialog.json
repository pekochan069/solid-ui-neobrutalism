{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "dialog",
  "type": "registry:ui",
  "dependencies": ["@kobalte/core"],
  "registryDependencies": ["button"],
  "files": [
    {
      "path": "src/registry/items/ui/dialog.tsx",
      "content": "import type { PolymorphicProps } from \"@kobalte/core/polymorphic\";\r\nimport type { Component, ComponentProps, JSX, ValidComponent } from \"solid-js\";\r\n\r\nimport { splitProps } from \"solid-js\";\r\nimport * as DialogPrimitive from \"@kobalte/core/dialog\";\r\nimport { XIcon } from \"lucide-solid\";\r\n\r\nimport { cn } from \"~/lib/utils\";\r\nimport { buttonVariants } from \"./button\";\r\n\r\nconst Dialog = (props: DialogPrimitive.DialogRootProps) => {\r\n  return <DialogPrimitive.Root data-slot=\"dialog\" {...props} />;\r\n};\r\n\r\nconst DialogTrigger = <T extends ValidComponent = \"button\">(\r\n  props: PolymorphicProps<T, DialogPrimitive.DialogTriggerProps<T>>,\r\n) => {\r\n  return <DialogPrimitive.Trigger data-slot=\"dialog-trigger\" {...props} />;\r\n};\r\n\r\nconst DialogPortal: Component<DialogPrimitive.DialogPortalProps> = (props) => {\r\n  const [, rest] = splitProps(props, [\"children\"]);\r\n  return (\r\n    <DialogPrimitive.Portal data-slot=\"dialog-portal\" {...rest}>\r\n      <div class=\"fixed inset-0 z-50 flex items-start justify-center sm:items-center\">\r\n        {props.children}\r\n      </div>\r\n    </DialogPrimitive.Portal>\r\n  );\r\n};\r\n\r\ntype DialogOverlayProps<T extends ValidComponent = \"div\"> =\r\n  DialogPrimitive.DialogOverlayProps<T> & { class?: string | undefined };\r\n\r\nconst DialogOverlay = <T extends ValidComponent = \"div\">(\r\n  props: PolymorphicProps<T, DialogOverlayProps<T>>,\r\n) => {\r\n  const [, rest] = splitProps(props as DialogOverlayProps, [\"class\"]);\r\n  return (\r\n    <DialogPrimitive.Overlay\r\n      data-slot=\"dialog-overlay\"\r\n      class={cn(\r\n        \"fixed inset-0 z-50 bg-overlay ui-expanded:animate-in ui-expanded:fade-in-0 ui-closed:animate-out ui-closed:fade-out-0\",\r\n        props.class,\r\n      )}\r\n      {...rest}\r\n    />\r\n  );\r\n};\r\n\r\ntype DialogContentProps<T extends ValidComponent = \"div\"> =\r\n  DialogPrimitive.DialogContentProps<T> & {\r\n    class?: string | undefined;\r\n    children?: JSX.Element;\r\n  };\r\n\r\nconst DialogContent = <T extends ValidComponent = \"div\">(\r\n  props: PolymorphicProps<T, DialogContentProps<T>>,\r\n) => {\r\n  const [, rest] = splitProps(props as DialogContentProps, [\r\n    \"class\",\r\n    \"children\",\r\n  ]);\r\n  return (\r\n    <DialogPortal>\r\n      <DialogOverlay />\r\n      <DialogPrimitive.Content\r\n        data-slot=\"dialog-content\"\r\n        class={cn(\r\n          \"fixed top-1/2 left-1/2 z-50 grid max-h-screen w-full max-w-lg -translate-x-1/2 -translate-y-1/2 gap-4 overflow-y-auto border-2 border-border bg-background p-6 shadow-shadow duration-200 sm:rounded-lg ui-expanded:animate-in ui-expanded:fade-in-0 ui-expanded:zoom-in-95 ui-closed:animate-out ui-closed:fade-out-0 ui-closed:zoom-out-95\",\r\n          props.class,\r\n        )}\r\n        {...rest}\r\n      >\r\n        {props.children}\r\n        <DialogPrimitive.CloseButton\r\n          data-slot=\"dialog-close-button\"\r\n          class={cn(\r\n            buttonVariants({\r\n              variant: \"neutral\",\r\n              size: \"icon\",\r\n            }),\r\n            \"absolute top-2 right-3 size-8\",\r\n          )}\r\n        >\r\n          <XIcon class=\"size-4\" />\r\n          <span class=\"sr-only\">Close</span>\r\n        </DialogPrimitive.CloseButton>\r\n      </DialogPrimitive.Content>\r\n    </DialogPortal>\r\n  );\r\n};\r\n\r\nconst DialogHeader: Component<ComponentProps<\"div\">> = (props) => {\r\n  const [, rest] = splitProps(props, [\"class\"]);\r\n  return (\r\n    <div\r\n      data-slot=\"dialog-header\"\r\n      class={cn(\r\n        \"flex flex-col space-y-1.5 text-center sm:text-left\",\r\n        props.class,\r\n      )}\r\n      {...rest}\r\n    />\r\n  );\r\n};\r\n\r\nconst DialogFooter: Component<ComponentProps<\"div\">> = (props) => {\r\n  const [, rest] = splitProps(props, [\"class\"]);\r\n  return (\r\n    <div\r\n      data-slot=\"dialog-footer\"\r\n      class={cn(\r\n        \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\r\n        props.class,\r\n      )}\r\n      {...rest}\r\n    />\r\n  );\r\n};\r\n\r\ntype DialogTitleProps<T extends ValidComponent = \"h2\"> =\r\n  DialogPrimitive.DialogTitleProps<T> & {\r\n    class?: string | undefined;\r\n  };\r\n\r\nconst DialogTitle = <T extends ValidComponent = \"h2\">(\r\n  props: PolymorphicProps<T, DialogTitleProps<T>>,\r\n) => {\r\n  const [, rest] = splitProps(props as DialogTitleProps, [\"class\"]);\r\n  return (\r\n    <DialogPrimitive.Title\r\n      data-slot=\"dialog-title\"\r\n      class={cn(\r\n        \"text-lg leading-none font-semibold tracking-tight\",\r\n        props.class,\r\n      )}\r\n      {...rest}\r\n    />\r\n  );\r\n};\r\n\r\ntype DialogDescriptionProps<T extends ValidComponent = \"p\"> =\r\n  DialogPrimitive.DialogDescriptionProps<T> & {\r\n    class?: string | undefined;\r\n  };\r\n\r\nconst DialogDescription = <T extends ValidComponent = \"p\">(\r\n  props: PolymorphicProps<T, DialogDescriptionProps<T>>,\r\n) => {\r\n  const [, rest] = splitProps(props as DialogDescriptionProps, [\"class\"]);\r\n  return (\r\n    <DialogPrimitive.Description\r\n      data-slot=\"dialog-description\"\r\n      class={cn(\"text-sm text-muted-foreground\", props.class)}\r\n      {...rest}\r\n    />\r\n  );\r\n};\r\n\r\nexport {\r\n  Dialog,\r\n  DialogTrigger,\r\n  DialogContent,\r\n  DialogHeader,\r\n  DialogFooter,\r\n  DialogTitle,\r\n  DialogDescription,\r\n};\r\n",
      "type": "registry:ui"
    }
  ]
}
