{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "pagination",
  "type": "registry:ui",
  "dependencies": ["@kobalte/core"],
  "registryDependencies": ["button"],
  "files": [
    {
      "path": "src/registry/items/ui/pagination.tsx",
      "content": "import type { PolymorphicProps } from \"@kobalte/core/polymorphic\";\nimport type { JSX, ValidComponent } from \"solid-js\";\n\nimport { Show, splitProps } from \"solid-js\";\nimport * as PaginationPrimitive from \"@kobalte/core/pagination\";\nimport ChevronLeftIcon from \"lucide-solid/icons/chevron-left\";\nimport ChevronRightIcon from \"lucide-solid/icons/chevron-right\";\nimport EllipsisIcon from \"lucide-solid/icons/ellipsis\";\n\nimport { buttonVariants } from \"~/components/ui/button\";\nimport { cn } from \"~/lib/utils\";\n\nconst PaginationItems = PaginationPrimitive.Items;\n\ntype PaginationRootProps<T extends ValidComponent = \"nav\"> =\n  PaginationPrimitive.PaginationRootProps<T> & { class?: string | undefined };\n\nconst Pagination = <T extends ValidComponent = \"nav\">(\n  props: PolymorphicProps<T, PaginationRootProps<T>>,\n) => {\n  const [local, others] = splitProps(props as PaginationRootProps, [\"class\"]);\n  return (\n    <PaginationPrimitive.Root\n      data-slot=\"pagination\"\n      class={cn(\n        \"[&>*]:flex [&>*]:flex-row [&>*]:items-center [&>*]:gap-1\",\n        local.class,\n      )}\n      {...others}\n    />\n  );\n};\n\ntype PaginationItemProps<T extends ValidComponent = \"button\"> =\n  PaginationPrimitive.PaginationItemProps<T> & { class?: string | undefined };\n\nconst PaginationItem = <T extends ValidComponent = \"button\">(\n  props: PolymorphicProps<T, PaginationItemProps<T>>,\n) => {\n  const [local, others] = splitProps(props as PaginationItemProps, [\"class\"]);\n  return (\n    <PaginationPrimitive.Item\n      data-slot=\"pagination-item\"\n      class={cn(\n        buttonVariants({\n          variant: \"neutral-no-shadow\",\n        }),\n        \"size-10 ui-current:bg-primary ui-current:text-primary-foreground ui-current:hover:bg-primary/80\",\n        local.class,\n      )}\n      {...others}\n    />\n  );\n};\n\ntype PaginationEllipsisProps<T extends ValidComponent = \"div\"> =\n  PaginationPrimitive.PaginationEllipsisProps<T> & {\n    class?: string | undefined;\n  };\n\nconst PaginationEllipsis = <T extends ValidComponent = \"div\">(\n  props: PolymorphicProps<T, PaginationEllipsisProps<T>>,\n) => {\n  const [local, others] = splitProps(props as PaginationEllipsisProps, [\n    \"class\",\n  ]);\n  return (\n    <PaginationPrimitive.Ellipsis\n      data-slot=\"pagination-ellipsis\"\n      class={cn(\"flex size-10 items-center justify-center\", local.class)}\n      {...others}\n    >\n      <EllipsisIcon class=\"size-4\" />\n      <span class=\"sr-only\">More pages</span>\n    </PaginationPrimitive.Ellipsis>\n  );\n};\n\ntype PaginationPreviousProps<T extends ValidComponent = \"button\"> =\n  PaginationPrimitive.PaginationPreviousProps<T> & {\n    class?: string | undefined;\n    children?: JSX.Element;\n  };\n\nconst PaginationPrevious = <T extends ValidComponent = \"button\">(\n  props: PolymorphicProps<T, PaginationPreviousProps<T>>,\n) => {\n  const [local, others] = splitProps(props as PaginationPreviousProps, [\n    \"class\",\n    \"children\",\n  ]);\n  return (\n    <PaginationPrimitive.Previous\n      data-slot=\"pagination-previous\"\n      class={cn(\n        buttonVariants({\n          variant: \"neutral-no-shadow\",\n        }),\n        \"gap-1 pl-2.5\",\n        local.class,\n      )}\n      {...others}\n    >\n      <Show\n        when={local.children}\n        fallback={\n          <>\n            <ChevronLeftIcon class=\"size-4\" />\n            <span>Previous</span>\n          </>\n        }\n      >\n        {(children) => children()}\n      </Show>\n    </PaginationPrimitive.Previous>\n  );\n};\n\ntype PaginationNextProps<T extends ValidComponent = \"button\"> =\n  PaginationPrimitive.PaginationNextProps<T> & {\n    class?: string | undefined;\n    children?: JSX.Element;\n  };\n\nconst PaginationNext = <T extends ValidComponent = \"button\">(\n  props: PolymorphicProps<T, PaginationNextProps<T>>,\n) => {\n  const [local, others] = splitProps(props as PaginationNextProps, [\n    \"class\",\n    \"children\",\n  ]);\n  return (\n    <PaginationPrimitive.Next\n      data-slot=\"pagination-next\"\n      class={cn(\n        buttonVariants({\n          variant: \"neutral-no-shadow\",\n        }),\n        \"gap-1 pr-2.5\",\n        local.class,\n      )}\n      {...others}\n    >\n      <Show\n        when={local.children}\n        fallback={\n          <>\n            <span>Next</span>\n            <ChevronRightIcon class=\"size-4\" />\n          </>\n        }\n      >\n        {(children) => children()}\n      </Show>\n    </PaginationPrimitive.Next>\n  );\n};\n\nexport {\n  Pagination,\n  PaginationItems,\n  PaginationItem,\n  PaginationEllipsis,\n  PaginationPrevious,\n  PaginationNext,\n};\n",
      "type": "registry:ui",
      "target": "ui/pagination.tsx"
    }
  ]
}
