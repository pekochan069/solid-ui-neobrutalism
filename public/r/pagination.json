{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "pagination",
  "type": "registry:ui",
  "dependencies": ["@kobalte/core"],
  "registryDependencies": ["button"],
  "files": [
    {
      "path": "src/registry/items/ui/pagination.tsx",
      "content": "import type { PolymorphicProps } from \"@kobalte/core/polymorphic\";\r\nimport type { JSX, ValidComponent } from \"solid-js\";\r\n\r\nimport { Show, splitProps } from \"solid-js\";\r\nimport * as PaginationPrimitive from \"@kobalte/core/pagination\";\r\nimport { ChevronLeftIcon, ChevronRightIcon, EllipsisIcon } from \"lucide-solid\";\r\n\r\nimport { buttonVariants } from \"~/components/ui/button\";\r\nimport { cn } from \"~/lib/utils\";\r\n\r\nconst PaginationItems = PaginationPrimitive.Items;\r\n\r\ntype PaginationRootProps<T extends ValidComponent = \"nav\"> =\r\n  PaginationPrimitive.PaginationRootProps<T> & { class?: string | undefined };\r\n\r\nconst Pagination = <T extends ValidComponent = \"nav\">(\r\n  props: PolymorphicProps<T, PaginationRootProps<T>>,\r\n) => {\r\n  const [local, others] = splitProps(props as PaginationRootProps, [\"class\"]);\r\n  return (\r\n    <PaginationPrimitive.Root\r\n      data-slot=\"pagination\"\r\n      class={cn(\r\n        \"[&>*]:flex [&>*]:flex-row [&>*]:items-center [&>*]:gap-1\",\r\n        local.class,\r\n      )}\r\n      {...others}\r\n    />\r\n  );\r\n};\r\n\r\ntype PaginationItemProps<T extends ValidComponent = \"button\"> =\r\n  PaginationPrimitive.PaginationItemProps<T> & { class?: string | undefined };\r\n\r\nconst PaginationItem = <T extends ValidComponent = \"button\">(\r\n  props: PolymorphicProps<T, PaginationItemProps<T>>,\r\n) => {\r\n  const [local, others] = splitProps(props as PaginationItemProps, [\"class\"]);\r\n  return (\r\n    <PaginationPrimitive.Item\r\n      data-slot=\"pagination-item\"\r\n      class={cn(\r\n        buttonVariants({\r\n          variant: \"neutral-no-shadow\",\r\n        }),\r\n        \"size-10 ui-current:bg-primary ui-current:text-primary-foreground ui-current:hover:bg-primary/80\",\r\n        local.class,\r\n      )}\r\n      {...others}\r\n    />\r\n  );\r\n};\r\n\r\ntype PaginationEllipsisProps<T extends ValidComponent = \"div\"> =\r\n  PaginationPrimitive.PaginationEllipsisProps<T> & {\r\n    class?: string | undefined;\r\n  };\r\n\r\nconst PaginationEllipsis = <T extends ValidComponent = \"div\">(\r\n  props: PolymorphicProps<T, PaginationEllipsisProps<T>>,\r\n) => {\r\n  const [local, others] = splitProps(props as PaginationEllipsisProps, [\r\n    \"class\",\r\n  ]);\r\n  return (\r\n    <PaginationPrimitive.Ellipsis\r\n      data-slot=\"pagination-ellipsis\"\r\n      class={cn(\"flex size-10 items-center justify-center\", local.class)}\r\n      {...others}\r\n    >\r\n      <EllipsisIcon class=\"size-4\" />\r\n      <span class=\"sr-only\">More pages</span>\r\n    </PaginationPrimitive.Ellipsis>\r\n  );\r\n};\r\n\r\ntype PaginationPreviousProps<T extends ValidComponent = \"button\"> =\r\n  PaginationPrimitive.PaginationPreviousProps<T> & {\r\n    class?: string | undefined;\r\n    children?: JSX.Element;\r\n  };\r\n\r\nconst PaginationPrevious = <T extends ValidComponent = \"button\">(\r\n  props: PolymorphicProps<T, PaginationPreviousProps<T>>,\r\n) => {\r\n  const [local, others] = splitProps(props as PaginationPreviousProps, [\r\n    \"class\",\r\n    \"children\",\r\n  ]);\r\n  return (\r\n    <PaginationPrimitive.Previous\r\n      data-slot=\"pagination-previous\"\r\n      class={cn(\r\n        buttonVariants({\r\n          variant: \"neutral-no-shadow\",\r\n        }),\r\n        \"gap-1 pl-2.5\",\r\n        local.class,\r\n      )}\r\n      {...others}\r\n    >\r\n      <Show\r\n        when={local.children}\r\n        fallback={\r\n          <>\r\n            <ChevronLeftIcon class=\"size-4\" />\r\n            <span>Previous</span>\r\n          </>\r\n        }\r\n      >\r\n        {(children) => children()}\r\n      </Show>\r\n    </PaginationPrimitive.Previous>\r\n  );\r\n};\r\n\r\ntype PaginationNextProps<T extends ValidComponent = \"button\"> =\r\n  PaginationPrimitive.PaginationNextProps<T> & {\r\n    class?: string | undefined;\r\n    children?: JSX.Element;\r\n  };\r\n\r\nconst PaginationNext = <T extends ValidComponent = \"button\">(\r\n  props: PolymorphicProps<T, PaginationNextProps<T>>,\r\n) => {\r\n  const [local, others] = splitProps(props as PaginationNextProps, [\r\n    \"class\",\r\n    \"children\",\r\n  ]);\r\n  return (\r\n    <PaginationPrimitive.Next\r\n      data-slot=\"pagination-next\"\r\n      class={cn(\r\n        buttonVariants({\r\n          variant: \"neutral-no-shadow\",\r\n        }),\r\n        \"gap-1 pr-2.5\",\r\n        local.class,\r\n      )}\r\n      {...others}\r\n    >\r\n      <Show\r\n        when={local.children}\r\n        fallback={\r\n          <>\r\n            <span>Next</span>\r\n            <ChevronRightIcon class=\"size-4\" />\r\n          </>\r\n        }\r\n      >\r\n        {(children) => children()}\r\n      </Show>\r\n    </PaginationPrimitive.Next>\r\n  );\r\n};\r\n\r\nexport {\r\n  Pagination,\r\n  PaginationItems,\r\n  PaginationItem,\r\n  PaginationEllipsis,\r\n  PaginationPrevious,\r\n  PaginationNext,\r\n};\r\n",
      "type": "registry:ui"
    }
  ]
}
