{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "text-field",
  "type": "registry:ui",
  "dependencies": ["@kobalte/core"],
  "files": [
    {
      "path": "src/registry/items/ui/text-field.tsx",
      "content": "import type { PolymorphicProps } from \"@kobalte/core\";\r\nimport type { ValidComponent } from \"solid-js\";\r\n\r\nimport { mergeProps, splitProps } from \"solid-js\";\r\nimport * as TextFieldPrimitive from \"@kobalte/core/text-field\";\r\nimport { cva } from \"class-variance-authority\";\r\n\r\nimport { cn } from \"~/lib/utils\";\r\n\r\ntype TextFieldRootProps<T extends ValidComponent = \"div\"> =\r\n  TextFieldPrimitive.TextFieldRootProps<T> & {\r\n    class?: string | undefined;\r\n  };\r\n\r\nconst TextField = <T extends ValidComponent = \"div\">(\r\n  props: PolymorphicProps<T, TextFieldRootProps<T>>,\r\n) => {\r\n  const [local, others] = splitProps(props as TextFieldRootProps, [\"class\"]);\r\n  return (\r\n    <TextFieldPrimitive.Root\r\n      data-slot=\"text-field\"\r\n      class={cn(\"flex flex-col gap-1\", local.class)}\r\n      {...others}\r\n    />\r\n  );\r\n};\r\n\r\ntype TextFieldInputProps<T extends ValidComponent = \"input\"> =\r\n  TextFieldPrimitive.TextFieldInputProps<T> & {\r\n    class?: string | undefined;\r\n    type?:\r\n      | \"button\"\r\n      | \"checkbox\"\r\n      | \"color\"\r\n      | \"date\"\r\n      | \"datetime-local\"\r\n      | \"email\"\r\n      | \"file\"\r\n      | \"hidden\"\r\n      | \"image\"\r\n      | \"month\"\r\n      | \"number\"\r\n      | \"password\"\r\n      | \"radio\"\r\n      | \"range\"\r\n      | \"reset\"\r\n      | \"search\"\r\n      | \"submit\"\r\n      | \"tel\"\r\n      | \"text\"\r\n      | \"time\"\r\n      | \"url\"\r\n      | \"week\";\r\n  };\r\n\r\nconst TextFieldInput = <T extends ValidComponent = \"input\">(\r\n  rawProps: PolymorphicProps<T, TextFieldInputProps<T>>,\r\n) => {\r\n  const props = mergeProps<TextFieldInputProps<T>[]>(\r\n    { type: \"text\" },\r\n    rawProps,\r\n  );\r\n  const [local, others] = splitProps(props as TextFieldInputProps, [\r\n    \"type\",\r\n    \"class\",\r\n  ]);\r\n  return (\r\n    <TextFieldPrimitive.Input\r\n      data-slot=\"text-field-input\"\r\n      type={local.type}\r\n      class={cn(\r\n        \"flex h-10 w-full rounded-base border-2 border-border bg-transparent px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:outline-none disabled:cursor-not-allowed disabled:opacity-50 ui-invalid:border-error-foreground ui-invalid:text-error-foreground\",\r\n        local.class,\r\n      )}\r\n      {...others}\r\n    />\r\n  );\r\n};\r\n\r\ntype TextFieldTextAreaProps<T extends ValidComponent = \"textarea\"> =\r\n  TextFieldPrimitive.TextFieldTextAreaProps<T> & { class?: string | undefined };\r\n\r\nconst TextFieldTextArea = <T extends ValidComponent = \"textarea\">(\r\n  props: PolymorphicProps<T, TextFieldTextAreaProps<T>>,\r\n) => {\r\n  const [local, others] = splitProps(props as TextFieldTextAreaProps, [\r\n    \"class\",\r\n  ]);\r\n  return (\r\n    <TextFieldPrimitive.TextArea\r\n      data-slot=\"text-field-textarea\"\r\n      class={cn(\r\n        \"flex min-h-[80px] w-full rounded-base border-2 border-border bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:outline-none disabled:cursor-not-allowed disabled:opacity-50\",\r\n        local.class,\r\n      )}\r\n      {...others}\r\n    />\r\n  );\r\n};\r\n\r\nconst labelVariants = cva(\r\n  \"text-sm leading-none font-medium peer-disabled:cursor-not-allowed peer-disabled:opacity-70\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        label: \"data-[invalid]:text-destructive\",\r\n        description: \"font-normal text-muted-foreground\",\r\n        error: \"text-destructive text-xs\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"label\",\r\n    },\r\n  },\r\n);\r\n\r\ntype TextFieldLabelProps<T extends ValidComponent = \"label\"> =\r\n  TextFieldPrimitive.TextFieldLabelProps<T> & { class?: string | undefined };\r\n\r\nconst TextFieldLabel = <T extends ValidComponent = \"label\">(\r\n  props: PolymorphicProps<T, TextFieldLabelProps<T>>,\r\n) => {\r\n  const [local, others] = splitProps(props as TextFieldLabelProps, [\"class\"]);\r\n  return (\r\n    <TextFieldPrimitive.Label\r\n      data-slot=\"text-field-label\"\r\n      class={cn(labelVariants(), local.class)}\r\n      {...others}\r\n    />\r\n  );\r\n};\r\n\r\ntype TextFieldDescriptionProps<T extends ValidComponent = \"div\"> =\r\n  TextFieldPrimitive.TextFieldDescriptionProps<T> & {\r\n    class?: string | undefined;\r\n  };\r\n\r\nconst TextFieldDescription = <T extends ValidComponent = \"div\">(\r\n  props: PolymorphicProps<T, TextFieldDescriptionProps<T>>,\r\n) => {\r\n  const [local, others] = splitProps(props as TextFieldDescriptionProps, [\r\n    \"class\",\r\n  ]);\r\n  return (\r\n    <TextFieldPrimitive.Description\r\n      data-slot=\"text-field-description\"\r\n      class={cn(labelVariants({ variant: \"description\" }), local.class)}\r\n      {...others}\r\n    />\r\n  );\r\n};\r\n\r\ntype TextFieldErrorMessageProps<T extends ValidComponent = \"div\"> =\r\n  TextFieldPrimitive.TextFieldErrorMessageProps<T> & {\r\n    class?: string | undefined;\r\n  };\r\n\r\nconst TextFieldErrorMessage = <T extends ValidComponent = \"div\">(\r\n  props: PolymorphicProps<T, TextFieldErrorMessageProps<T>>,\r\n) => {\r\n  const [local, others] = splitProps(props as TextFieldErrorMessageProps, [\r\n    \"class\",\r\n  ]);\r\n  return (\r\n    <TextFieldPrimitive.ErrorMessage\r\n      data-slot=\"text-field-error-message\"\r\n      class={cn(labelVariants({ variant: \"error\" }), local.class)}\r\n      {...others}\r\n    />\r\n  );\r\n};\r\n\r\nexport {\r\n  TextField,\r\n  TextFieldInput,\r\n  TextFieldTextArea,\r\n  TextFieldLabel,\r\n  TextFieldDescription,\r\n  TextFieldErrorMessage,\r\n};\r\n",
      "type": "registry:ui"
    }
  ]
}
