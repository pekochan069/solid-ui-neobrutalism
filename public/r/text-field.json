{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "text-field",
  "type": "registry:ui",
  "dependencies": ["@kobalte/core"],
  "files": [
    {
      "path": "src/registry/items/ui/text-field.tsx",
      "content": "import type { PolymorphicProps } from \"@kobalte/core\";\nimport type { ValidComponent } from \"solid-js\";\n\nimport { mergeProps, splitProps } from \"solid-js\";\nimport * as TextFieldPrimitive from \"@kobalte/core/text-field\";\nimport { cva } from \"class-variance-authority\";\n\nimport { cn } from \"~/lib/utils\";\n\ntype TextFieldRootProps<T extends ValidComponent = \"div\"> =\n  TextFieldPrimitive.TextFieldRootProps<T> & {\n    class?: string | undefined;\n  };\n\nconst TextField = <T extends ValidComponent = \"div\">(\n  props: PolymorphicProps<T, TextFieldRootProps<T>>,\n) => {\n  const [local, others] = splitProps(props as TextFieldRootProps, [\"class\"]);\n  return (\n    <TextFieldPrimitive.Root\n      data-slot=\"text-field\"\n      class={cn(\"flex flex-col gap-1\", local.class)}\n      {...others}\n    />\n  );\n};\n\ntype TextFieldInputProps<T extends ValidComponent = \"input\"> =\n  TextFieldPrimitive.TextFieldInputProps<T> & {\n    class?: string | undefined;\n    type?:\n      | \"button\"\n      | \"checkbox\"\n      | \"color\"\n      | \"date\"\n      | \"datetime-local\"\n      | \"email\"\n      | \"file\"\n      | \"hidden\"\n      | \"image\"\n      | \"month\"\n      | \"number\"\n      | \"password\"\n      | \"radio\"\n      | \"range\"\n      | \"reset\"\n      | \"search\"\n      | \"submit\"\n      | \"tel\"\n      | \"text\"\n      | \"time\"\n      | \"url\"\n      | \"week\";\n  };\n\nconst TextFieldInput = <T extends ValidComponent = \"input\">(\n  rawProps: PolymorphicProps<T, TextFieldInputProps<T>>,\n) => {\n  const props = mergeProps<TextFieldInputProps<T>[]>(\n    { type: \"text\" },\n    rawProps,\n  );\n  const [local, others] = splitProps(props as TextFieldInputProps, [\n    \"type\",\n    \"class\",\n  ]);\n  return (\n    <TextFieldPrimitive.Input\n      data-slot=\"text-field-input\"\n      type={local.type}\n      class={cn(\n        \"flex h-10 w-full rounded-base border-2 border-border bg-transparent px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:outline-none disabled:cursor-not-allowed disabled:opacity-50 ui-invalid:border-error-foreground ui-invalid:text-error-foreground\",\n        local.class,\n      )}\n      {...others}\n    />\n  );\n};\n\ntype TextFieldTextAreaProps<T extends ValidComponent = \"textarea\"> =\n  TextFieldPrimitive.TextFieldTextAreaProps<T> & { class?: string | undefined };\n\nconst TextFieldTextArea = <T extends ValidComponent = \"textarea\">(\n  props: PolymorphicProps<T, TextFieldTextAreaProps<T>>,\n) => {\n  const [local, others] = splitProps(props as TextFieldTextAreaProps, [\n    \"class\",\n  ]);\n  return (\n    <TextFieldPrimitive.TextArea\n      data-slot=\"text-field-textarea\"\n      class={cn(\n        \"flex min-h-[80px] w-full rounded-base border-2 border-border bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:outline-none disabled:cursor-not-allowed disabled:opacity-50\",\n        local.class,\n      )}\n      {...others}\n    />\n  );\n};\n\nconst labelVariants = cva(\n  \"text-sm leading-none font-medium peer-disabled:cursor-not-allowed peer-disabled:opacity-70\",\n  {\n    variants: {\n      variant: {\n        label: \"data-[invalid]:text-destructive\",\n        description: \"font-normal text-muted-foreground\",\n        error: \"text-xs text-error-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"label\",\n    },\n  },\n);\n\ntype TextFieldLabelProps<T extends ValidComponent = \"label\"> =\n  TextFieldPrimitive.TextFieldLabelProps<T> & { class?: string | undefined };\n\nconst TextFieldLabel = <T extends ValidComponent = \"label\">(\n  props: PolymorphicProps<T, TextFieldLabelProps<T>>,\n) => {\n  const [local, others] = splitProps(props as TextFieldLabelProps, [\"class\"]);\n  return (\n    <TextFieldPrimitive.Label\n      data-slot=\"text-field-label\"\n      class={cn(labelVariants(), local.class)}\n      {...others}\n    />\n  );\n};\n\ntype TextFieldDescriptionProps<T extends ValidComponent = \"div\"> =\n  TextFieldPrimitive.TextFieldDescriptionProps<T> & {\n    class?: string | undefined;\n  };\n\nconst TextFieldDescription = <T extends ValidComponent = \"div\">(\n  props: PolymorphicProps<T, TextFieldDescriptionProps<T>>,\n) => {\n  const [local, others] = splitProps(props as TextFieldDescriptionProps, [\n    \"class\",\n  ]);\n  return (\n    <TextFieldPrimitive.Description\n      data-slot=\"text-field-description\"\n      class={cn(labelVariants({ variant: \"description\" }), local.class)}\n      {...others}\n    />\n  );\n};\n\ntype TextFieldErrorMessageProps<T extends ValidComponent = \"div\"> =\n  TextFieldPrimitive.TextFieldErrorMessageProps<T> & {\n    class?: string | undefined;\n  };\n\nconst TextFieldErrorMessage = <T extends ValidComponent = \"div\">(\n  props: PolymorphicProps<T, TextFieldErrorMessageProps<T>>,\n) => {\n  const [local, others] = splitProps(props as TextFieldErrorMessageProps, [\n    \"class\",\n  ]);\n  return (\n    <TextFieldPrimitive.ErrorMessage\n      data-slot=\"text-field-error-message\"\n      class={cn(labelVariants({ variant: \"error\" }), local.class)}\n      {...others}\n    />\n  );\n};\n\nexport {\n  TextField,\n  TextFieldInput,\n  TextFieldTextArea,\n  TextFieldLabel,\n  TextFieldDescription,\n  TextFieldErrorMessage,\n};\n",
      "type": "registry:ui"
    }
  ]
}
