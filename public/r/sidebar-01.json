{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "sidebar-01",
  "type": "registry:block",
  "description": "A simple sidebar with navigation grouped by section.",
  "registryDependencies": [
    "sidebar",
    "breadcrumb",
    "separator",
    "label",
    "dropdown-menu"
  ],
  "files": [
    {
      "path": "src/registry/items/block/sidebar-01/page.tsx",
      "content": "import {\n  Breadcrumb,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbList,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n} from \"~/components/ui/breadcrumb\";\nimport { Separator } from \"~/components/ui/separator\";\nimport {\n  SidebarInset,\n  SidebarProvider,\n  SidebarTrigger,\n} from \"~/components/ui/sidebar\";\nimport { AppSidebar } from \"./components/app-sidebar\";\n\nexport default function Page() {\n  return (\n    <SidebarProvider>\n      <AppSidebar />\n      <SidebarInset>\n        <header class=\"flex h-16 shrink-0 items-center gap-2 border-b px-4\">\n          <SidebarTrigger class=\"-ml-1\" />\n          <Separator\n            orientation=\"vertical\"\n            class=\"mr-2 data-[orientation=vertical]:h-4\"\n          />\n          <Breadcrumb>\n            <BreadcrumbList>\n              <BreadcrumbItem class=\"hidden md:block\">\n                <BreadcrumbLink href=\"#\">\n                  Building Your Application\n                </BreadcrumbLink>\n              </BreadcrumbItem>\n              <BreadcrumbSeparator class=\"hidden md:block\" />\n              <BreadcrumbItem>\n                <BreadcrumbPage>Data Fetching</BreadcrumbPage>\n              </BreadcrumbItem>\n            </BreadcrumbList>\n          </Breadcrumb>\n        </header>\n        <div class=\"flex flex-1 flex-col gap-4 p-4\">\n          <div class=\"grid auto-rows-min gap-4 md:grid-cols-3\">\n            <div class=\"aspect-video rounded-xl bg-muted/50\" />\n            <div class=\"aspect-video rounded-xl bg-muted/50\" />\n            <div class=\"aspect-video rounded-xl bg-muted/50\" />\n          </div>\n          <div class=\"min-h-[100vh] flex-1 rounded-xl bg-muted/50 md:min-h-min\" />\n        </div>\n      </SidebarInset>\n    </SidebarProvider>\n  );\n}\n",
      "type": "registry:page",
      "target": "src/routes/dashboard/page.tsx"
    },
    {
      "path": "src/registry/items/block/sidebar-01/components/app-sidebar.tsx",
      "content": "import type { ComponentProps } from \"solid-js\";\n\nimport { For } from \"solid-js\";\n\nimport {\n  Sidebar,\n  SidebarContent,\n  SidebarGroup,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarMenu,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarRail,\n} from \"~/components/ui/sidebar\";\nimport { SearchForm } from \"./search-form\";\nimport { VersionSwitcher } from \"./version-switcher\";\n\n// This is sample data.\nconst data = {\n  versions: [\"1.0.1\", \"1.1.0-alpha\", \"2.0.0-beta1\"],\n  navMain: [\n    {\n      title: \"Getting Started\",\n      url: \"#\",\n      items: [\n        {\n          title: \"Installation\",\n          url: \"#\",\n        },\n        {\n          title: \"Project Structure\",\n          url: \"#\",\n        },\n      ],\n    },\n    {\n      title: \"Building Your Application\",\n      url: \"#\",\n      items: [\n        {\n          title: \"Routing\",\n          url: \"#\",\n        },\n        {\n          title: \"Data Fetching\",\n          url: \"#\",\n          isActive: true,\n        },\n        {\n          title: \"Rendering\",\n          url: \"#\",\n        },\n        {\n          title: \"Caching\",\n          url: \"#\",\n        },\n        {\n          title: \"Styling\",\n          url: \"#\",\n        },\n        {\n          title: \"Optimizing\",\n          url: \"#\",\n        },\n        {\n          title: \"Configuring\",\n          url: \"#\",\n        },\n        {\n          title: \"Testing\",\n          url: \"#\",\n        },\n        {\n          title: \"Authentication\",\n          url: \"#\",\n        },\n        {\n          title: \"Deploying\",\n          url: \"#\",\n        },\n        {\n          title: \"Upgrading\",\n          url: \"#\",\n        },\n        {\n          title: \"Examples\",\n          url: \"#\",\n        },\n      ],\n    },\n    {\n      title: \"API Reference\",\n      url: \"#\",\n      items: [\n        {\n          title: \"Components\",\n          url: \"#\",\n        },\n        {\n          title: \"File Conventions\",\n          url: \"#\",\n        },\n        {\n          title: \"Functions\",\n          url: \"#\",\n        },\n        {\n          title: \"next.config.js Options\",\n          url: \"#\",\n        },\n        {\n          title: \"CLI\",\n          url: \"#\",\n        },\n        {\n          title: \"Edge Runtime\",\n          url: \"#\",\n        },\n      ],\n    },\n    {\n      title: \"Architecture\",\n      url: \"#\",\n      items: [\n        {\n          title: \"Accessibility\",\n          url: \"#\",\n        },\n        {\n          title: \"Fast Refresh\",\n          url: \"#\",\n        },\n        {\n          title: \"Next.js Compiler\",\n          url: \"#\",\n        },\n        {\n          title: \"Supported Browsers\",\n          url: \"#\",\n        },\n        {\n          title: \"Turbopack\",\n          url: \"#\",\n        },\n      ],\n    },\n  ],\n};\n\nexport function AppSidebar(props: ComponentProps<typeof Sidebar>) {\n  return (\n    <Sidebar {...props}>\n      <SidebarHeader>\n        <VersionSwitcher\n          versions={data.versions}\n          defaultVersion={data.versions[0]}\n        />\n        <SearchForm />\n      </SidebarHeader>\n      <SidebarContent>\n        {/* We create a SidebarGroup for each parent. */}\n        <For each={data.navMain}>\n          {(item) => (\n            <SidebarGroup>\n              <SidebarGroupLabel>{item.title}</SidebarGroupLabel>\n              <SidebarGroupContent>\n                <SidebarMenu>\n                  <For each={item.items}>\n                    {(item) => (\n                      <SidebarMenuItem>\n                        <SidebarMenuButton\n                          as=\"a\"\n                          href={item.url}\n                          isActive={item.isActive}\n                        >\n                          {item.title}\n                        </SidebarMenuButton>\n                      </SidebarMenuItem>\n                    )}\n                  </For>\n                </SidebarMenu>\n              </SidebarGroupContent>\n            </SidebarGroup>\n          )}\n        </For>\n      </SidebarContent>\n      <SidebarRail />\n    </Sidebar>\n  );\n}\n",
      "type": "registry:component"
    },
    {
      "path": "src/registry/items/block/sidebar-01/components/search-form.tsx",
      "content": "import type { ComponentProps } from \"solid-js\";\n\nimport SearchIcon from \"lucide-solid/icons/search\";\n\nimport { Label } from \"~/components/ui/label\";\nimport {\n  SidebarGroup,\n  SidebarGroupContent,\n  SidebarInput,\n} from \"~/components/ui/sidebar\";\n\nexport function SearchForm(props: ComponentProps<\"form\">) {\n  return (\n    <form {...props}>\n      <SidebarGroup class=\"py-0\">\n        <SidebarGroupContent class=\"relative\">\n          <Label for=\"search\" class=\"sr-only\">\n            Search\n          </Label>\n          <SidebarInput\n            id=\"search\"\n            placeholder=\"Search the docs...\"\n            class=\"pl-8\"\n          />\n          <SearchIcon class=\"pointer-events-none absolute top-1/2 left-2 size-4 -translate-y-1/2 opacity-50 select-none\" />\n        </SidebarGroupContent>\n      </SidebarGroup>\n    </form>\n  );\n}\n",
      "type": "registry:component"
    },
    {
      "path": "src/registry/items/block/sidebar-01/components/version-switcher.tsx",
      "content": "import { createSignal, For } from \"solid-js\";\nimport CheckIcon from \"lucide-solid/icons/check\";\nimport ChevronsUpDownIcon from \"lucide-solid/icons/chevrons-up-down\";\nimport GalleryVerticalEndIcon from \"lucide-solid/icons/gallery-vertical-end\";\n\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuTrigger,\n} from \"~/components/ui/dropdown-menu\";\nimport {\n  SidebarMenu,\n  SidebarMenuButton,\n  SidebarMenuItem,\n} from \"~/components/ui/sidebar\";\n\nexport function VersionSwitcher(props: {\n  versions: string[];\n  defaultVersion: string;\n}) {\n  const [selectedVersion, setSelectedVersion] = createSignal(\n    props.defaultVersion,\n  );\n\n  return (\n    <SidebarMenu>\n      <SidebarMenuItem>\n        <DropdownMenu sameWidth>\n          <DropdownMenuTrigger\n            as={SidebarMenuButton}\n            size=\"lg\"\n            class=\"ui-expanded:bg-sidebar-accent ui-expanded:text-sidebar-accent-foreground\"\n          >\n            <div class=\"flex aspect-square size-8 items-center justify-center rounded-lg bg-sidebar-primary text-sidebar-primary-foreground\">\n              <GalleryVerticalEndIcon class=\"size-4\" />\n            </div>\n            <div class=\"flex flex-col gap-0.5 leading-none\">\n              <span class=\"font-medium\">Documentation</span>\n              <span class=\"\">v{selectedVersion()}</span>\n            </div>\n            <ChevronsUpDownIcon class=\"ml-auto\" />\n          </DropdownMenuTrigger>\n          <DropdownMenuContent class=\"w-full\">\n            <For each={props.versions}>\n              {(version) => (\n                <DropdownMenuItem onSelect={() => setSelectedVersion(version)}>\n                  v{version}{\" \"}\n                  {version === selectedVersion() && (\n                    <CheckIcon class=\"ml-auto\" />\n                  )}\n                </DropdownMenuItem>\n              )}\n            </For>\n          </DropdownMenuContent>\n        </DropdownMenu>\n      </SidebarMenuItem>\n    </SidebarMenu>\n  );\n}\n",
      "type": "registry:component"
    }
  ],
  "categories": ["sidebar", "dashboard"]
}
